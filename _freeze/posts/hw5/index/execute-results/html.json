{
  "hash": "b0207fc5668baf39a7fefb53166eacb7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 5\"\nauthor: \"이예솔\"\ndate: \"2024-07-30\"\ncategories: [bigdata]\n---\n\n::: {#cd1d4207 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n    \n#!pip install pyreadstat\nraw_welfare= pd.read_spss('./koweps/Koweps_hpwc14_2019_beta2.sav')\n\nwelfare = raw_welfare.copy()\n\nwelfare.shape\nwelfare.info()\nwelfare.describe()\n\nwelfare = welfare.rename(\n    columns = {\n        \"h14_g3\": \"sex\",\n        \"h14_g4\": \"birth\",\n        \"h14_g10\": \"marriage_type\",\n        \"h14_g11\": \"religion\",\n        \"p1402_8aq1\": \"income\",\n        \"h14_eco9\": \"code_job\",\n        \"h14_reg7\": \"code_region\",\n    }\n)\n\nwelfare = welfare[[\"sex\",\"birth\",\"marriage_type\",\"religion\",\"income\",\"code_job\",\"code_region\"]]\nwelfare.shape\n\nwelfare['sex'].dtypes\nwelfare['sex'].value_counts()\nwelfare['sex'].isna().sum()\n\nwelfare['sex'] = np.where(welfare['sex']==1,'male','female')\nwelfare['sex']\n\nwelfare['income'].describe()\nwelfare['income'].isna().sum()\nwelfare['income'].value_counts().sort_values()\nsum(welfare['income'] >9998)\n\nsex_income = welfare.dropna(subset='income').groupby('sex', as_index=False).agg(mean_income=(\"income\",\"mean\"))\nsex_income\n?sns.barplot\n\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\",errorbar=('ci', 95))\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 14418 entries, 0 to 14417\nColumns: 830 entries, h14_id to h14_pers_income5\ndtypes: float64(826), object(4)\nmemory usage: 91.3+ MB\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n# 위 그래프에서 각 성별 95% 신뢰구간 계산 후 그리기(위 아래 검성색 막대기로 표시)\n\n::: {#8680e8b0 .cell execution_count=2}\n``` {.python .cell-code}\n# 표본 평균 구하기(income이 nan이 아닌 여자, 남자)\nx_bar_F, x_bar_M = sex_income['mean_income']\n# 표본 갯수 구하기(income이 nan이 아닌 여자, 남자)\nn_F, n_M = welfare.dropna(subset='income').value_counts('sex')\n# 표본 표준편차 구하기\nincome_female = welfare.dropna(subset='income').query('sex==\"female\"')['income']\nincome_male = welfare.dropna(subset='income').query('sex==\"male\"')['income']\ns_F = np.std(income_female, ddof=1)\ns_M = np.std(income_male, ddof=1)\n# 표본 표준오차 구하기\nse_F = np.std(income_female, ddof=1) / np.sqrt(n_F)\nse_M = np.std(income_male, ddof=1) / np.sqrt(n_M)\n# 신뢰구간 95%\n\n## 방법1) 직접 계산\n# from scipy.stats import norm\n# z0025 = norm.ppf(0.975, loc=0, scale=1)\n# ci_left_F = x_bar_F - z0025 * se_F\n# ci_right_F = x_bar_F + z0025 * se_F\n# ci_left_M = x_bar_M - z0025 * se_M\n# ci_right_M = x_bar_M + z0025 * se_M\n\n## 방법2) scipy 함수쓰기\n# from scipy.stats import t\n# ci_left_F,ci_right_F = t.interval(0.95, loc=x_bar_F, scale=se_F, df=n_F-1)\n# ci_left_M,ci_right_M = t.interval(0.95, loc=x_bar_M, scale=se_M, df=n_M-1)\n# sex_income['ci_left'] = np.array([ci_left_F,ci_left_M])\n# sex_income['ci_right'] = np.array([ci_right_F,ci_right_M])\n\n# 평균에서 더하고 빼줄 95% 신뢰구간 (Errorbar에는 평균값빼고 그 다음항만 필요)\nfrom scipy.stats import norm\nz0025 = norm.ppf(0.975, loc=0, scale=1)\nci_F = z0025 * se_F\nci_M = z0025 * se_M\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\")\nplt.errorbar(x=sex_income['sex'], y=sex_income['mean_income'], yerr=ci_F, fmt='none', c='k')\nplt.errorbar(x=sex_income['sex'], y=sex_income['mean_income'], yerr=ci_M, fmt='none', c='k')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}