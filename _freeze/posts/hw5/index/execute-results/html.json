{
  "hash": "f4cae872a8845fdcddbc0f1c78dec334",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 5\"\nauthor: \"이예솔\"\ndate: \"2024-07-30\"\ncategories: [bigdata]\n---\n\n::: {#d5b7b62e .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n    \n#!pip install pyreadstat\nraw_welfare= pd.read_spss('./koweps/Koweps_hpwc14_2019_beta2.sav')\n\nwelfare = raw_welfare.copy()\n\nwelfare.shape\nwelfare.info()\nwelfare.describe()\n\nwelfare = welfare.rename(\n    columns = {\n        \"h14_g3\": \"sex\",\n        \"h14_g4\": \"birth\",\n        \"h14_g10\": \"marriage_type\",\n        \"h14_g11\": \"religion\",\n        \"p1402_8aq1\": \"income\",\n        \"h14_eco9\": \"code_job\",\n        \"h14_reg7\": \"code_region\",\n    }\n)\n\nwelfare = welfare[[\"sex\",\"birth\",\"marriage_type\",\"religion\",\"income\",\"code_job\",\"code_region\"]]\nwelfare.shape\n\nwelfare['sex'].dtypes\nwelfare['sex'].value_counts()\nwelfare['sex'].isna().sum()\n\nwelfare['sex'] = np.where(welfare['sex']==1,'male','female')\nwelfare['sex']\n\nwelfare['income'].describe()\nwelfare['income'].isna().sum()\nwelfare['income'].value_counts().sort_values()\nsum(welfare['income'] >9998)\n\nsex_income = welfare.dropna(subset='income').groupby('sex', as_index=False).agg(mean_income=(\"income\",\"mean\"))\nsex_income\n?sns.barplot\n\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\",errorbar=('ci', 95))\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 14418 entries, 0 to 14417\nColumns: 830 entries, h14_id to h14_pers_income5\ndtypes: float64(826), object(4)\nmemory usage: 91.3+ MB\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n# 위 그래프에서 각 성별 95% 신뢰구간 계산 후 그리기(위 아래 검성색 막대기로 표시)\n\n::: {#8426e405 .cell execution_count=2}\n``` {.python .cell-code}\n# 표본 평균 구하기(income이 nan이 아닌 여자, 남자)\nx_var_F, x_var_M = sex_income['mean_income']\n# 표본 갯수 구하기(income이 nan이 아닌 여자, 남자)\nn_F, n_M = welfare.dropna(subset='income').value_counts('sex')\n# 표본 표준편차 구하기\nincome_female = welfare.dropna(subset='income').query('sex==\"female\"')['income']\nincome_male = welfare.dropna(subset='income').query('sex==\"male\"')['income']\ns_F = np.std(income_female, ddof=1)\ns_M = np.std(income_male, ddof=1)\n# 표본 표준오차 구하기\nse_F = np.std(income_female, ddof=1) / np.sqrt(n_F)\nse_M = np.std(income_male, ddof=1) / np.sqrt(n_M)\n# 신뢰구간 95%\n\n## 방법1) 직접 계산산\n# from scipy.stats import norm\n# z0025 = norm.ppf(0.975, loc=0, scale=1)\n# ci_left_F = x_var_F - z0025 * se_F\n# ci_right_F = x_var_F + z0025 * se_F\n# ci_left_M = x_var_M - z0025 * se_M\n# ci_right_M = x_var_M + z0025 * se_M\n\n## 방법2) scipy 함수쓰기\nfrom scipy.stats import t\nci_left_F,ci_right_F = t.interval(0.95, loc=x_var_F, scale=se_F, df=n_F-1)\nci_left_M,ci_right_M = t.interval(0.95, loc=x_var_M, scale=se_M, df=n_M-1)\nsex_income['ci_left'] = np.array([ci_left_F,ci_left_M])\nsex_income['ci_right'] = np.array([ci_right_F,ci_right_M])\n\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\")\nplt.show()\nplt.clf()\n\nsex_income\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n      <th>ci_left</th>\n      <th>ci_right</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n      <td>180.880349</td>\n      <td>191.705843</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n      <td>340.020692</td>\n      <td>358.054450</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}