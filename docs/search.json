[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solog",
    "section": "",
    "text": "홈페이지 첫 화면입니다.\n안녕하세요. 블로그에 오신 것을 환영합니다.\n\n1+1\n\n2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "about.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "about.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "about.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "about.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "import pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "about.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "about.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nQ2-1. 가격 평균\n\nfruits['가격'].mean()\n\nnp.float64(2100.0)\n\n\n\n\nQ2-2. 판매량 평균\n\nfruits['판매량'].mean()\n\nnp.float64(25.0)"
  },
  {
    "objectID": "about.html#q3.-mpg데이터를-이요해-분석-문제를-해결해-보세요.",
    "href": "about.html#q3.-mpg데이터를-이요해-분석-문제를-해결해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3. mpg데이터를 이요해 분석 문제를 해결해 보세요.",
    "text": "Q3. mpg데이터를 이요해 분석 문제를 해결해 보세요."
  },
  {
    "objectID": "hw1.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "hw1.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw1.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nA2-1. 가격 평균\n\nfruits['가격'].mean()\n\nnp.float64(2100.0)\n\n\n\n\nA2-2. 판매량 평균\n\nfruits['판매량'].mean()\n\nnp.float64(25.0)"
  },
  {
    "objectID": "hw1.html#q3.-mpg데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "hw1.html#q3.-mpg데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3. mpg데이터를 이용해 분석 문제를 해결해 보세요.",
    "text": "Q3. mpg데이터를 이용해 분석 문제를 해결해 보세요."
  },
  {
    "objectID": "hw1.html#q1-1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "hw1.html#q1-1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html#q1-2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw1.html#q1-2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q1-2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "Q1-2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nQ1-2-1. 가격 평균\n\nfruits['가격'].mean()\n\nnp.float64(2100.0)\n\n\n\n\nQ1-2-2. 판매량 평균\n\nfruits['판매량'].mean()\n\nnp.float64(25.0)"
  },
  {
    "objectID": "hw1.html#q2-1.-mpg데이터를-불러와-복사본을-만드세요",
    "href": "hw1.html#q2-1.-mpg데이터를-불러와-복사본을-만드세요",
    "title": "hw1(24.07.15)",
    "section": "Q2-1. mpg데이터를 불러와 복사본을 만드세요",
    "text": "Q2-1. mpg데이터를 불러와 복사본을 만드세요\n\ndf_mpg=pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q2-2.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "hw1.html#q2-2.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q2-2. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "Q2-2. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nmpg = mpg.rename(columns={'cty':'city','hwy':'highway'})\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q2-3.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "hw1.html#q2-3.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1(24.07.15)",
    "section": "Q2-3. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "Q2-3. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#q3-1.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "hw1.html#q3-1.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3-1. midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "Q3-1. midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nQ3-1-1. 파일 불러오기\n\ndf_midwest = pd.read_csv('data/midwest.csv')\nmidwest= df_midwest.copy()\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n\nQ3-1-2. 데이터의 특징 파악하기 (1) head()\n\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nQ3-1-2. 데이터의 특징 파악하기 (2) tail()\n\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nQ3-1-2. 데이터의 특징 파악하기 (3) info()\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\nQ3-1-2. 데이터의 특징 파악하기 (4) shape\n\nmidwest.shape\n\n(437, 28)\n\n\n\n\nQ3-1-2. 데이터의 특징 파악하기 (5) describe()\n\nmidwest.describe(include='all')\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\ncount\n437.000000\n437\n437\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n...\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437\n\n\nunique\nNaN\n320\n5\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n16\n\n\ntop\nNaN\nCRAWFORD\nIL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nAAR\n\n\nfreq\nNaN\n5\n102\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n193\n\n\nmean\n1437.338673\nNaN\nNaN\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n...\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\nNaN\n\n\nstd\n876.390266\nNaN\nNaN\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n...\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\nNaN\n\n\nmin\n561.000000\nNaN\nNaN\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n...\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\nNaN\n\n\n25%\n670.000000\nNaN\nNaN\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n...\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\nNaN\n\n\n50%\n1221.000000\nNaN\nNaN\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n...\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\nNaN\n\n\n75%\n2059.000000\nNaN\nNaN\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n...\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\nNaN\n\n\nmax\n3052.000000\nNaN\nNaN\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n...\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\nNaN\n\n\n\n\n11 rows × 28 columns"
  },
  {
    "objectID": "hw1.html#q3-2.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "hw1.html#q3-2.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3-2. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "Q3-2. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nmidwest = midwest.rename(columns={'poptotal':'total','popasian':'asian'})\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "hw1.html#q3-3.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "hw1.html#q3-3.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3-3. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "Q3-3. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nQ3-3-1. 파생변수 추가\n\nmidwest['ratio'] = midwest['asian'] / midwest['total'] * 100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\nQ3-3-2. 히스토그램 생성\n\n히스토그램이란? 값의 빈도를 막대 길이로 표현한 그래프이다.\n\n\nmidwest['ratio'].plot.hist()"
  },
  {
    "objectID": "hw1.html#q3-4.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "hw1.html#q3-4.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3-4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "Q3-4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport numpy as np\nmean = midwest['ratio'].mean()\nmidwest['size'] = np.where(midwest['ratio'] &gt; mean , 'large', 'samll')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsamll\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsamll\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsamll\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsamll\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsamll\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "hw1.html#q3-5.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "hw1.html#q3-5.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q3-5. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "Q3-5. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nQ3-5-1. 빈도표 만들기\n\nmidwest['size'].value_counts()\n\nsize\nsamll    318\nlarge    119\nName: count, dtype: int64\n\n\n\n\nQ3-5-2. 막대그래프 만들기\n\ncount_size = midwest['size'].value_counts()\ncount_size.plot.bar(rot = 0)"
  },
  {
    "objectID": "hw1.html#q1.",
    "href": "hw1.html#q1.",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "import pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw1.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "href": "hw1.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "title": "hw1(24.07.15)",
    "section": "Q3. mpg데이터를 불러와 복사본을 만드세요",
    "text": "Q3. mpg데이터를 불러와 복사본을 만드세요\n\nA3. 데이터 불러와 복사본 만들기\n\ndf_mpg=pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "hw1.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nA4. 데이터 열이름 바꾸기\n\nmpg = mpg.rename(columns={'cty':'city','hwy':'highway'})\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw1.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "hw1.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1(24.07.15)",
    "section": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nA5. 데이터 일부 출력하기\n\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw1.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "hw1.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nA6-1. 파일 불러오기\n\ndf_midwest = pd.read_csv('data/midwest.csv')\nmidwest= df_midwest.copy()\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n\nA6-2. 데이터의 특징 파악하기 (1) head()\n\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-3. 데이터의 특징 파악하기 (2) tail()\n\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-4. 데이터의 특징 파악하기 (3) info()\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\nA6-5. 데이터의 특징 파악하기 (4) shape\n\nmidwest.shape\n\n(437, 28)\n\n\n\n\nA6-6. 데이터의 특징 파악하기 (5) describe()\n\nmidwest.describe(include='all')\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\ncount\n437.000000\n437\n437\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n...\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437\n\n\nunique\nNaN\n320\n5\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n16\n\n\ntop\nNaN\nCRAWFORD\nIL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nAAR\n\n\nfreq\nNaN\n5\n102\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n193\n\n\nmean\n1437.338673\nNaN\nNaN\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n...\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\nNaN\n\n\nstd\n876.390266\nNaN\nNaN\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n...\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\nNaN\n\n\nmin\n561.000000\nNaN\nNaN\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n...\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\nNaN\n\n\n25%\n670.000000\nNaN\nNaN\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n...\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\nNaN\n\n\n50%\n1221.000000\nNaN\nNaN\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n...\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\nNaN\n\n\n75%\n2059.000000\nNaN\nNaN\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n...\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\nNaN\n\n\nmax\n3052.000000\nNaN\nNaN\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n...\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\nNaN\n\n\n\n\n11 rows × 28 columns"
  },
  {
    "objectID": "hw1.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "hw1.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nA7. 컬럼 명 수정하기\n\nmidwest = midwest.rename(columns={'poptotal':'total','popasian':'asian'})\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "hw1.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "hw1.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nA8-1. 파생변수 추가\n\nmidwest['ratio'] = midwest['asian'] / midwest['total'] * 100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\nA8-2. 히스토그램 생성\n\n히스토그램이란? 값의 빈도를 막대 길이로 표현한 그래프이다.\n\n\nmidwest['ratio'].plot.hist()"
  },
  {
    "objectID": "hw1.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "hw1.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nA9. 열 추가하기\n\nimport numpy as np\nmean = midwest['ratio'].mean()\nmidwest['size'] = np.where(midwest['ratio'] &gt; mean , 'large', 'samll')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsamll\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsamll\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsamll\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsamll\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsamll\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "hw1.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "hw1.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nA10-1. 빈도표 만들기\n\nmidwest['size'].value_counts()\n\nsize\nsamll    318\nlarge    119\nName: count, dtype: int64\n\n\n\n\nA10-2. 막대그래프 만들기\n\ncount_size = midwest['size'].value_counts()\ncount_size.plot.bar(rot = 0)"
  },
  {
    "objectID": "hw1.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "hw1.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2(24.07.16)",
    "section": "",
    "text": "import pandas as pd\ndf_mpg= pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "hw1.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "hw1.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2(24.07.16)",
    "section": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\nA2-1. audi의 cty 평균\n\nmpg.query('manufacturer == \"audi\"')['cty'].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n\nA2-2. toyota의 cty평균\n\nmpg.query(' manufacturer == \"toyota\" ')['cty'].mean()\n\nnp.float64(18.529411764705884)\n\n\n\n\nA2-3. 자동차 제조회사별 도시연비 평균 비교\n도요타의 도시연비 평균이 더 높다"
  },
  {
    "objectID": "hw1.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "hw1.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "hw2(24.07.16)",
    "section": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\nA3. 세 회사의 고속도로 연비 전체 평균\n\nmpg.query('manufacturer in [\"chevrolet\",\"ford\",\"honda\"] ')['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "hw2(24.07.16)",
    "section": "",
    "text": "import pandas as pd\ndf_mpg= pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "hw2.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "hw2.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "hw1(24.07.15)",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "hw2.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw2.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nA2-1. 가격 평균\n\nfruits['가격'].mean()\n\nnp.float64(2100.0)\n\n\n\n\nA2-2. 판매량 평균\n\nfruits['판매량'].mean()\n\nnp.float64(25.0)"
  },
  {
    "objectID": "hw2.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "href": "hw2.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "title": "hw1(24.07.15)",
    "section": "Q3. mpg데이터를 불러와 복사본을 만드세요",
    "text": "Q3. mpg데이터를 불러와 복사본을 만드세요\n\nA3. 데이터 불러와 복사본 만들기\n\ndf_mpg=pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw2.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "hw2.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nA4. 데이터 열이름 바꾸기\n\nmpg = mpg.rename(columns={'cty':'city','hwy':'highway'})\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "hw2.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "hw2.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "hw1(24.07.15)",
    "section": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nA5. 데이터 일부 출력하기\n\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "hw2.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "hw2.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nA6-1. 파일 불러오기\n\ndf_midwest = pd.read_csv('data/midwest.csv')\nmidwest= df_midwest.copy()\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n\nA6-2. 데이터의 특징 파악하기 (1) head()\n\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-3. 데이터의 특징 파악하기 (2) tail()\n\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-4. 데이터의 특징 파악하기 (3) info()\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\nA6-5. 데이터의 특징 파악하기 (4) shape\n\nmidwest.shape\n\n(437, 28)\n\n\n\n\nA6-6. 데이터의 특징 파악하기 (5) describe()\n\nmidwest.describe(include='all')\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\ncount\n437.000000\n437\n437\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n...\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437\n\n\nunique\nNaN\n320\n5\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n16\n\n\ntop\nNaN\nCRAWFORD\nIL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nAAR\n\n\nfreq\nNaN\n5\n102\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n193\n\n\nmean\n1437.338673\nNaN\nNaN\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n...\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\nNaN\n\n\nstd\n876.390266\nNaN\nNaN\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n...\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\nNaN\n\n\nmin\n561.000000\nNaN\nNaN\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n...\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\nNaN\n\n\n25%\n670.000000\nNaN\nNaN\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n...\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\nNaN\n\n\n50%\n1221.000000\nNaN\nNaN\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n...\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\nNaN\n\n\n75%\n2059.000000\nNaN\nNaN\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n...\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\nNaN\n\n\nmax\n3052.000000\nNaN\nNaN\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n...\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\nNaN\n\n\n\n\n11 rows × 28 columns"
  },
  {
    "objectID": "hw2.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "hw2.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "hw1(24.07.15)",
    "section": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nA7. 컬럼 명 수정하기\n\nmidwest = midwest.rename(columns={'poptotal':'total','popasian':'asian'})\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "hw2.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "hw2.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nA8-1. 파생변수 추가\n\nmidwest['ratio'] = midwest['asian'] / midwest['total'] * 100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\nA8-2. 히스토그램 생성\n\n히스토그램이란? 값의 빈도를 막대 길이로 표현한 그래프이다.\n\n\nmidwest['ratio'].plot.hist()"
  },
  {
    "objectID": "hw2.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "hw2.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nA9. 열 추가하기\n\nimport numpy as np\nmean = midwest['ratio'].mean()\nmidwest['size'] = np.where(midwest['ratio'] &gt; mean , 'large', 'samll')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsamll\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsamll\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsamll\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsamll\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsamll\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "hw2.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "hw2.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "hw1(24.07.15)",
    "section": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nA10-1. 빈도표 만들기\n\nmidwest['size'].value_counts()\n\nsize\nsamll    318\nlarge    119\nName: count, dtype: int64\n\n\n\n\nA10-2. 막대그래프 만들기\n\ncount_size = midwest['size'].value_counts()\ncount_size.plot.bar(rot = 0)"
  },
  {
    "objectID": "hw2.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2(24.07.16)",
    "section": "",
    "text": "import pandas as pd\ndf_mpg= pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "hw2.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "hw2.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "hw2(24.07.16)",
    "section": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\nA2-1. audi의 cty 평균\n\nmpg.query('manufacturer == \"audi\"')['cty'].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n\nA2-2. toyota의 cty평균\n\nmpg.query(' manufacturer == \"toyota\" ')['cty'].mean()\n\nnp.float64(18.529411764705884)\n\n\n\n\nA2-3. 자동차 제조회사별 도시연비 평균 비교\n도요타의 도시연비 평균이 더 높다\n\n\nA2-4. groupby 이용해서 풀어보기\n\nmpg.groupby('manufacturer',as_index=False)\\\n   .agg(mean_cty=('cty','mean'))\\\n   .query('manufacturer in [\"audi\",\"toyota\"] ')\n\n\n\n\n\n\n\n\nmanufacturer\nmean_cty\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412"
  },
  {
    "objectID": "hw2.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "hw2.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "hw2(24.07.16)",
    "section": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\nA3. 세 회사의 고속도로 연비 전체 평균\n\nmpg.query('manufacturer in [\"chevrolet\",\"ford\",\"honda\"] ')['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html#q4.-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "hw2.html#q4.-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "hw2(24.07.16)",
    "section": "Q4. audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. audi에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "Q4. audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. audi에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nA4. audi 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터 출력\n\nmpg.query('manufacturer == \"audi\"').sort_values('hwy', ascending=False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "hw2.html#q5.-mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "hw2.html#q5.-mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "hw2(24.07.16)",
    "section": "Q5. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "Q5. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nA5-1. 데이터 복사본 생성\n\nmpg_raw = pd.read_csv('data/mpg.csv')\nmpg = mpg_raw.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\nA5-2. 합산 연비 변수 생성\n\nmpg=mpg.assign(total=(mpg['cty']+mpg['hwy']))\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42"
  },
  {
    "objectID": "hw2.html#q6.-앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요",
    "href": "hw2.html#q6.-앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요",
    "title": "hw2(24.07.16)",
    "section": "Q6. 앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요",
    "text": "Q6. 앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요\n\nA6. 평균 연비 변수 생성\n\nmpg = mpg.assign(mean = mpg['total'] / 2)\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0"
  },
  {
    "objectID": "hw2.html#q7.-평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "hw2.html#q7.-평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "hw2(24.07.16)",
    "section": "Q7. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "Q7. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nA7. 평균 연비 변수가 가장 높은 자동차 3종 데이터 출력\n\nmpg.sort_values('mean',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "hw2.html#q8.-57번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "hw2.html#q8.-57번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "hw2(24.07.16)",
    "section": "Q8. 5~7번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "Q8. 5~7번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\nmpg_raw.assign(\n    total=lambda x: x['cty']+x['hwy'],\n    mean =lambda x: x['total']/2\n).sort_values('mean',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "crime.html",
    "href": "crime.html",
    "title": "crime",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.read_csv('data/crime.csv', encoding='EUC-KR')\ncrime=df.copy()\ncrime.head()\n\n\n\n\n\n\n\n\n죄종별(1)\n죄종별(2)\n2018\n2018.1\n2018.2\n2018.3\n2018.4\n2018.5\n2018.6\n2018.7\n...\n2021.6\n2021.7\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n\n\n\n\n0\n죄종별(1)\n죄종별(2)\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n...\n금요일\n토요일\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n\n\n1\n강력범죄\n소계\n26787\n4154\n3529\n3619\n3693\n3659\n3834\n4299\n...\n3228\n3531\n24954\n3596\n3445\n3420\n3403\n3411\n3653\n4026\n\n\n2\n강력범죄\n살인기수\n309\n54\n40\n38\n53\n41\n54\n29\n...\n52\n38\n275\n32\n43\n43\n46\n39\n37\n35\n\n\n3\n강력범죄\n살인미수등\n488\n72\n74\n62\n68\n76\n67\n69\n...\n59\n53\n427\n65\n62\n76\n54\n57\n58\n55\n\n\n4\n강력범죄\n강도\n821\n126\n120\n133\n116\n117\n101\n108\n...\n88\n64\n516\n82\n80\n91\n64\n58\n73\n68\n\n\n\n\n5 rows × 42 columns"
  },
  {
    "objectID": "crime.html#변수이름-바꾸기",
    "href": "crime.html#변수이름-바꾸기",
    "title": "crime",
    "section": "",
    "text": "crime = crime.rename(columns={\n    '죄종별(1)':'대분류',\n    '죄종별(2)':'소분류',\n    '2018':'18_계',\n    '2018.1':'18_일',\n    '2018.2':'18_월',\n    '2018.3':'18_화',\n    '2018.4':'18_수',\n    '2018.5':'18_목',\n    '2018.6':'18_금',\n    '2018.7':'18_토',\n    })\ncrime.head()\n\n\n\n\n\n\n\n\n대분류\n소분류\n18_계\n18_일\n18_월\n18_화\n18_수\n18_목\n18_금\n18_토\n...\n2021.6\n2021.7\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n\n\n\n\n0\n죄종별(1)\n죄종별(2)\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n...\n금요일\n토요일\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n\n\n1\n강력범죄\n소계\n26787\n4154\n3529\n3619\n3693\n3659\n3834\n4299\n...\n3228\n3531\n24954\n3596\n3445\n3420\n3403\n3411\n3653\n4026\n\n\n2\n강력범죄\n살인기수\n309\n54\n40\n38\n53\n41\n54\n29\n...\n52\n38\n275\n32\n43\n43\n46\n39\n37\n35\n\n\n3\n강력범죄\n살인미수등\n488\n72\n74\n62\n68\n76\n67\n69\n...\n59\n53\n427\n65\n62\n76\n54\n57\n58\n55\n\n\n4\n강력범죄\n강도\n821\n126\n120\n133\n116\n117\n101\n108\n...\n88\n64\n516\n82\n80\n91\n64\n58\n73\n68\n\n\n\n\n5 rows × 42 columns"
  },
  {
    "objectID": "crime.html#지울-행의-위해-인덱스-추출",
    "href": "crime.html#지울-행의-위해-인덱스-추출",
    "title": "crime",
    "section": "3-1. 지울 행의 위해 인덱스 추출",
    "text": "3-1. 지울 행의 위해 인덱스 추출\n\nimport numpy as np\ncrime.query('소분류 == \"소계\"')\n\n\n\n\n\n\n\n\n대분류\n소분류\n18_계\n18_일\n18_월\n18_화\n18_수\n18_목\n18_금\n18_토\n...\n2021.6\n2021.7\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n\n\n\n\n1\n강력범죄\n소계\n26787\n4154\n3529\n3619\n3693\n3659\n3834\n4299\n...\n3228\n3531\n24954\n3596\n3445\n3420\n3403\n3411\n3653\n4026\n\n\n10\n폭력범죄\n소계\n287611\n45412\n37497\n39345\n38608\n38576\n41040\n47133\n...\n34121\n37214\n245286\n37058\n33005\n33201\n33337\n33329\n35716\n39640\n\n\n19\n지능범죄\n소계\n344698\n27392\n56954\n56076\n56448\n57746\n58834\n31248\n...\n58798\n30275\n405105\n30173\n68747\n68148\n66354\n67742\n68516\n35425\n\n\n\n\n3 rows × 42 columns"
  },
  {
    "objectID": "crime.html#필요-없는-행-제거",
    "href": "crime.html#필요-없는-행-제거",
    "title": "crime",
    "section": "3-2. 필요 없는 행 제거",
    "text": "3-2. 필요 없는 행 제거\n\ncrime_18 = crime[['대분류','소분류','18_계','18_일','18_월','18_화','18_수','18_목','18_금','18_토']].drop([0,1,10,19])\ncrime_18\n\n\n\n\n\n\n\n\n대분류\n소분류\n18_계\n18_일\n18_월\n18_화\n18_수\n18_목\n18_금\n18_토\n\n\n\n\n2\n강력범죄\n살인기수\n309\n54\n40\n38\n53\n41\n54\n29\n\n\n3\n강력범죄\n살인미수등\n488\n72\n74\n62\n68\n76\n67\n69\n\n\n4\n강력범죄\n강도\n821\n126\n120\n133\n116\n117\n101\n108\n\n\n5\n강력범죄\n강간\n5293\n906\n698\n709\n743\n646\n699\n892\n\n\n6\n강력범죄\n유사강간\n776\n127\n113\n103\n96\n99\n99\n139\n\n\n7\n강력범죄\n강제추행\n17053\n2564\n2197\n2263\n2333\n2389\n2547\n2760\n\n\n8\n강력범죄\n기타 강간·강제추행등\n356\n49\n51\n48\n49\n45\n55\n59\n\n\n9\n강력범죄\n방화\n1691\n256\n236\n263\n235\n246\n212\n243\n\n\n11\n폭력범죄\n상해\n39766\n6105\n5326\n5649\n5395\n5396\n5628\n6267\n\n\n12\n폭력범죄\n폭행\n159267\n25977\n20195\n21334\n21160\n21181\n22423\n26997\n\n\n13\n폭력범죄\n체포·감금\n1207\n162\n168\n189\n180\n192\n165\n151\n\n\n14\n폭력범죄\n협박\n17200\n2498\n2462\n2530\n2474\n2444\n2408\n2384\n\n\n15\n폭력범죄\n약취·유인\n187\n29\n34\n27\n26\n30\n26\n15\n\n\n16\n폭력범죄\n폭력행위등\n9204\n1705\n1175\n1205\n1088\n1163\n1206\n1662\n\n\n17\n폭력범죄\n공갈\n4096\n457\n685\n644\n604\n656\n593\n457\n\n\n18\n폭력범죄\n손괴\n56684\n8479\n7452\n7767\n7681\n7514\n8591\n9200\n\n\n20\n지능범죄\n직무유기\n581\n39\n105\n92\n92\n114\n103\n36\n\n\n21\n지능범죄\n직권남용\n603\n33\n96\n110\n110\n110\n104\n40\n\n\n22\n지능범죄\n증수뢰\n347\n22\n53\n57\n69\n64\n61\n21\n\n\n23\n지능범죄\n통화\n1194\n34\n230\n226\n208\n242\n212\n42\n\n\n24\n지능범죄\n문서·인장\n12290\n673\n2202\n1992\n1893\n2710\n1991\n829\n\n\n25\n지능범죄\n유가증권인지\n197\n17\n20\n25\n30\n32\n58\n15\n\n\n26\n지능범죄\n사기\n270029\n19524\n45478\n45020\n45399\n45752\n46698\n22158\n\n\n27\n지능범죄\n횡령\n55113\n6802\n7968\n7793\n7922\n7992\n8817\n7819\n\n\n28\n지능범죄\n배임\n4344\n248\n802\n761\n725\n730\n790\n288"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "교재 summary",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13"
  },
  {
    "objectID": "summary.html#q1.-교재",
    "href": "summary.html#q1.-교재",
    "title": "교재 summary",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "myblog",
    "section": "",
    "text": "LS 빅데이터 스쿨 Homework 5\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 30, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\n통계계\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 29, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\nTEAM PROJECT 1\n\n\n\n\n\n\n\n\n\n\n\nJul 24, 2024\n\n\n5조(내이름은코난탐정이조)\n\n\n\n\n\n\n\n\n\n\n\n\nplotly를 이용한 그래프 그리기\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\n넘파이 배열\n\n\n\n\n\n\nnumpy\n\n\n\n\n\n\n\n\n\nJul 18, 2024\n\n\nSol\n\n\n\n\n\n\n\n\n\n\n\n\n넘파이 이미지\n\n\n\n\n\n\nnumpy\n\n\n\n\n\n\n\n\n\nJul 18, 2024\n\n\nSol\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\n이예솔\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 Homework 1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\n이예솔\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "summary.html#pandas-내장함수",
    "href": "summary.html#pandas-내장함수",
    "title": "교재 summary",
    "section": "[2] pandas 내장함수",
    "text": "[2] pandas 내장함수\n\n1. 변수명 바꾸기 .rename(columns = {‘변경전’:‘변경후’})\n\n\n2. 파생변수 만들기\n\n(1) df[‘파생변수명’] = 넣을값\n\n\n(2) 평균값 df.mean()\n\n\n\n3. 값 확인하기\n\n(1) df[‘컬럼명’].value_counts()\n\n\n(2) 빈도수를 알파벳순으로 정렬 .sort_index()\n\n\n\n4. 그래프로 확인하기\n\n(1) df.plot.bar()\n\n\n\n5. 전처리하기\n\n(1) query : 행 추출\n\n\n(2) df[] : 열(변수) 추출\n\n\n(3) sort_values() : 정렬\n\n\n(4) groupby(): 집단별로 나누기\n\n\n(5) assign: 변수 추가\n\n\n(6) agg(): 통계치 구하기\n\n\n(7) merge() : 데이터 합치기"
  },
  {
    "objectID": "summary.html#numpy-내장함수",
    "href": "summary.html#numpy-내장함수",
    "title": "교재 summary",
    "section": "[3] numpy 내장함수",
    "text": "[3] numpy 내장함수\n\n1. np.wehre(조건, 참일때 값, 거짓일때 값)\n\n\n2."
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "href": "posts/hw1/index.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "",
    "text": "제품\n가격\n판매량\n\n\n\n\n사과\n1800\n24\n\n\n딸기\n1500\n38\n\n\n수박\n3000\n13\n\n\n\n\n\n\nimport pandas as pd\n\nfruits = pd.DataFrame({\n    '제품':['사과','딸기','수박'],\n    '가격':[1800,1500,3000],\n    '판매량':[24,38,13]\n})\nfruits\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13"
  },
  {
    "objectID": "posts/hw1/index.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "posts/hw1/index.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.",
    "text": "Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nA2-1. 가격 평균\n\nfruits['가격'].mean()\n\nnp.float64(2100.0)\n\n\n\n\nA2-2. 판매량 평균\n\nfruits['판매량'].mean()\n\nnp.float64(25.0)"
  },
  {
    "objectID": "posts/hw1/index.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "href": "posts/hw1/index.html#q3.-mpg데이터를-불러와-복사본을-만드세요",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q3. mpg데이터를 불러와 복사본을 만드세요",
    "text": "Q3. mpg데이터를 불러와 복사본을 만드세요\n\nA3. 데이터 불러와 복사본 만들기\n\ndf_mpg=pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "href": "posts/hw1/index.html#q4.-복사본-데이터를-이용해-cty는-city로-hwy는-highway로-수정하세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.",
    "text": "Q4. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nA4. 데이터 열이름 바꾸기\n\nmpg = mpg.rename(columns={'cty':'city','hwy':'highway'})\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "href": "posts/hw1/index.html#q5.-데이터-일부를-출력해-변수명이-바뀌었는지-확인해보세요.-다음과-같은-결과물이-출력되어야-합니다.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.",
    "text": "Q5. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nA5. 데이터 일부 출력하기\n\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact"
  },
  {
    "objectID": "posts/hw1/index.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "href": "posts/hw1/index.html#q6.-midwest.csv를-불러와-데이터의-특징을-파악하세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.",
    "text": "Q6. midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nA6-1. 파일 불러오기\n\ndf_midwest = pd.read_csv('data/midwest.csv')\nmidwest= df_midwest.copy()\nmidwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\n\nA6-2. 데이터의 특징 파악하기 (1) head()\n\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-3. 데이터의 특징 파악하기 (2) tail()\n\nmidwest.tail()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\nA6-4. 데이터의 특징 파악하기 (3) info()\n\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\nA6-5. 데이터의 특징 파악하기 (4) shape\n\nmidwest.shape\n\n(437, 28)\n\n\n\n\nA6-6. 데이터의 특징 파악하기 (5) describe()\n\nmidwest.describe(include='all')\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\ncount\n437.000000\n437\n437\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n...\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437\n\n\nunique\nNaN\n320\n5\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n16\n\n\ntop\nNaN\nCRAWFORD\nIL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nAAR\n\n\nfreq\nNaN\n5\n102\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n193\n\n\nmean\n1437.338673\nNaN\nNaN\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n...\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\nNaN\n\n\nstd\n876.390266\nNaN\nNaN\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n...\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\nNaN\n\n\nmin\n561.000000\nNaN\nNaN\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n...\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\nNaN\n\n\n25%\n670.000000\nNaN\nNaN\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n...\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\nNaN\n\n\n50%\n1221.000000\nNaN\nNaN\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n...\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\nNaN\n\n\n75%\n2059.000000\nNaN\nNaN\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n...\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\nNaN\n\n\nmax\n3052.000000\nNaN\nNaN\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n...\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\nNaN\n\n\n\n\n11 rows × 28 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "href": "posts/hw1/index.html#q7.-poptotal전체인구-변수를-total로-popasian아시아-인구-변수를-asian으로-수정하세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.",
    "text": "Q7. poptotal(전체인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nA7. 컬럼 명 수정하기\n\nmidwest = midwest.rename(columns={'poptotal':'total','popasian':'asian'})\nmidwest.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "posts/hw1/index.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "href": "posts/hw1/index.html#q8.-totalasian변수를-이용해-전체-인구-대비-아시아-인구-백분율-파생변수를-추가하고-히스토그램을-만들어-분포를-살펴보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.",
    "text": "Q8. total,asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nA8-1. 파생변수 추가\n\nmidwest['ratio'] = midwest['asian'] / midwest['total'] * 100\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\n\nA8-2. 히스토그램 생성\n\n히스토그램이란? 값의 빈도를 막대 길이로 표현한 그래프이다.\n\n\nmidwest['ratio'].plot.hist()"
  },
  {
    "objectID": "posts/hw1/index.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "href": "posts/hw1/index.html#q9.-아시아-인구-백분율-전체-평균을-구하고-평균을-초과하면-large-그-외에는-small을-부여한-파생변수를-만들어-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.",
    "text": "Q9. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nA9. 열 추가하기\n\nimport numpy as np\nmean = midwest['ratio'].mean()\nmidwest['size'] = np.where(midwest['ratio'] &gt; mean , 'large', 'samll')\nmidwest.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nratio\nsize\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsamll\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsamll\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsamll\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsamll\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsamll\n\n\n\n\n5 rows × 30 columns"
  },
  {
    "objectID": "posts/hw1/index.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "href": "posts/hw1/index.html#q10.-large와small에-해당하는-지역이-얼마나-많은지-빈도표와-빈도-막대-그래프를-만들어-확인해-보세요.",
    "title": "LS 빅데이터 스쿨 Homework 1",
    "section": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.",
    "text": "Q10. large와small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nA10-1. 빈도표 만들기\n\nmidwest['size'].value_counts()\n\nsize\nsamll    318\nlarge    119\nName: count, dtype: int64\n\n\n\n\nA10-2. 막대그래프 만들기\n\ncount_size = midwest['size'].value_counts()\ncount_size.plot.bar(rot = 0)"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "",
    "text": "import pandas as pd\ndf_mpg= pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/index.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#q1.-자동차-배기량에-따라-고속도로-연비가-다른지-알아보려고-합니다.displ배기량이-4-이하인-자동차와-5-이상인-자동차-중-어떤-자동차의-hwy고속도로-연비-평균이-더-높은지-알아보세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "",
    "text": "import pandas as pd\ndf_mpg= pd.read_csv('data/mpg.csv')\nmpg = df_mpg.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\n\n\nmpg.query('displ &lt;= 4')['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\n\n\n\nmpg.query('displ &gt;= 5')['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\n\n\n배기량이 4이하인 자동차의 고속도로 연비 평균이 더 높다."
  },
  {
    "objectID": "posts/hw2/index.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "href": "posts/hw2/index.html#q2.-자동차-제조-회사에-따라-도시-연비가-어떻게-다른지-알아보려고-합니다.-audi와-toyota-중-어느-manufacturer자동차-제조-회사의-cty도시-연비-평균이-더-높은지-알아보세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.",
    "text": "Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. audi와 toyota 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요.\n\nA2-1. audi의 cty 평균\n\nmpg.query('manufacturer == \"audi\"')['cty'].mean()\n\nnp.float64(17.61111111111111)\n\n\n\n\nA2-2. toyota의 cty평균\n\nmpg.query(' manufacturer == \"toyota\" ')['cty'].mean()\n\nnp.float64(18.529411764705884)\n\n\n\n\nA2-3. 자동차 제조회사별 도시연비 평균 비교\n도요타의 도시연비 평균이 더 높다\n\n\nA2-4. groupby 이용해서 풀어보기\n\nmpg.groupby('manufacturer',as_index=False)\\\n   .agg(mean_cty=('cty','mean'))\\\n   .query('manufacturer in [\"audi\",\"toyota\"] ')\n\n\n\n\n\n\n\n\nmanufacturer\nmean_cty\n\n\n\n\n0\naudi\n17.611111\n\n\n13\ntoyota\n18.529412"
  },
  {
    "objectID": "posts/hw2/index.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "href": "posts/hw2/index.html#q3.-chevrolet-ford-honda-자동차의-고속도로-연비-평균을-알아보려고-합니다.-세-회사의-데이터를-추출한-다음-hwy-전체-평균을-구해보세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.",
    "text": "Q3. chevrolet, ford, honda 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해보세요.\n\nA3. 세 회사의 고속도로 연비 전체 평균\n\nmpg.query('manufacturer in [\"chevrolet\",\"ford\",\"honda\"] ')['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "posts/hw2/index.html#q4.-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#q4.-audi에서-생산한-자동차-중에-어떤-자동차-모델의-hwy고속도로-연비가-높은지-알아보려고-합니다.-audi에서-생산한-자동차-중-hwy가-15위에-해당하는-자동차의-데이터를-출력하세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q4. audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. audi에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.",
    "text": "Q4. audi에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. audi에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nA4. audi 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터 출력\n\nmpg.query('manufacturer == \"audi\"').sort_values('hwy', ascending=False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/index.html#q5.-mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "href": "posts/hw2/index.html#q5.-mpg-데이터-복사본을-만들고-cty와-hwy를-더한-합산-연비-변수를-추가하세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q5. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.",
    "text": "Q5. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nA5-1. 데이터 복사본 생성\n\nmpg_raw = pd.read_csv('data/mpg.csv')\nmpg = mpg_raw.copy()\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\n\nA5-2. 합산 연비 변수 생성\n\nmpg=mpg.assign(total=(mpg['cty']+mpg['hwy']))\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42"
  },
  {
    "objectID": "posts/hw2/index.html#q6.-앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요",
    "href": "posts/hw2/index.html#q6.-앞에서-만든-합산-연비-변수를-2로-나눠-평균-연비-변수를-추가하세요",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q6. 앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요",
    "text": "Q6. 앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요\n\nA6. 평균 연비 변수 생성\n\nmpg = mpg.assign(mean = mpg['total'] / 2)\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0"
  },
  {
    "objectID": "posts/hw2/index.html#q7.-평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "href": "posts/hw2/index.html#q7.-평균-연비-변수가-가장-높은-자동차-3종의-데이터를-출력하세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q7. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.",
    "text": "Q7. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nA7. 평균 연비 변수가 가장 높은 자동차 3종 데이터 출력\n\nmpg.sort_values('mean',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw2/index.html#q8.-57번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "href": "posts/hw2/index.html#q8.-57번-문제를-해결할-수-있는-하나로-연결된-pandas-구문을-만들어-실행해-보세요.-데이터는-복사본-대신-mpg-원본을-이용하세요.",
    "title": "LS 빅데이터 스쿨 Homework 2",
    "section": "Q8. 5~7번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.",
    "text": "Q8. 5~7번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요.\n\nmpg_raw.assign(\n    total=lambda x: x['cty']+x['hwy'],\n    mean =lambda x: x['total']/2\n).sort_values('mean',ascending=False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/project/index.html",
    "href": "posts/project/index.html",
    "title": "Project1-crime",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.read_csv('data/crime.csv', encoding='EUC-KR')\ncrime=df.copy()\ncrime.head()\n\n\n\n\n\n\n\n\n죄종별(1)\n죄종별(2)\n2018\n2018.1\n2018.2\n2018.3\n2018.4\n2018.5\n2018.6\n2018.7\n...\n2021.6\n2021.7\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n\n\n\n\n0\n죄종별(1)\n죄종별(2)\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n...\n금요일\n토요일\n계\n일요일\n월요일\n화요일\n수요일\n목요일\n금요일\n토요일\n\n\n1\n강력범죄\n소계\n26787\n4154\n3529\n3619\n3693\n3659\n3834\n4299\n...\n3228\n3531\n24954\n3596\n3445\n3420\n3403\n3411\n3653\n4026\n\n\n2\n강력범죄\n살인기수\n309\n54\n40\n38\n53\n41\n54\n29\n...\n52\n38\n275\n32\n43\n43\n46\n39\n37\n35\n\n\n3\n강력범죄\n살인미수등\n488\n72\n74\n62\n68\n76\n67\n69\n...\n59\n53\n427\n65\n62\n76\n54\n57\n58\n55\n\n\n4\n강력범죄\n강도\n821\n126\n120\n133\n116\n117\n101\n108\n...\n88\n64\n516\n82\n80\n91\n64\n58\n73\n68\n\n\n\n\n5 rows × 42 columns"
  },
  {
    "objectID": "posts/project/index.html#지울-행의-위해-인덱스-추출",
    "href": "posts/project/index.html#지울-행의-위해-인덱스-추출",
    "title": "Project1-crime",
    "section": "3-1. 지울 행의 위해 인덱스 추출",
    "text": "3-1. 지울 행의 위해 인덱스 추출\n\nimport numpy as np\ncrime.query('소분류 == \"소계\"')\n\n\n\n\n\n\n\n\n대분류\n소분류\n18_계\n18_일\n18_월\n18_화\n18_수\n18_목\n18_금\n18_토\n...\n2021.6\n2021.7\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n2022.7\n\n\n\n\n1\n강력범죄\n소계\n26787\n4154\n3529\n3619\n3693\n3659\n3834\n4299\n...\n3228\n3531\n24954\n3596\n3445\n3420\n3403\n3411\n3653\n4026\n\n\n10\n폭력범죄\n소계\n287611\n45412\n37497\n39345\n38608\n38576\n41040\n47133\n...\n34121\n37214\n245286\n37058\n33005\n33201\n33337\n33329\n35716\n39640\n\n\n19\n지능범죄\n소계\n344698\n27392\n56954\n56076\n56448\n57746\n58834\n31248\n...\n58798\n30275\n405105\n30173\n68747\n68148\n66354\n67742\n68516\n35425\n\n\n\n\n3 rows × 42 columns"
  },
  {
    "objectID": "posts/project/index.html#필요-없는-행-제거",
    "href": "posts/project/index.html#필요-없는-행-제거",
    "title": "Project1-crime",
    "section": "3-2. 필요 없는 행 제거",
    "text": "3-2. 필요 없는 행 제거\n\ncrime_18 = crime[['대분류','소분류','18_계','18_일','18_월','18_화','18_수','18_목','18_금','18_토']].drop([0,1,10,19])\ncrime_18\n\n\n\n\n\n\n\n\n대분류\n소분류\n18_계\n18_일\n18_월\n18_화\n18_수\n18_목\n18_금\n18_토\n\n\n\n\n2\n강력범죄\n살인기수\n309\n54\n40\n38\n53\n41\n54\n29\n\n\n3\n강력범죄\n살인미수등\n488\n72\n74\n62\n68\n76\n67\n69\n\n\n4\n강력범죄\n강도\n821\n126\n120\n133\n116\n117\n101\n108\n\n\n5\n강력범죄\n강간\n5293\n906\n698\n709\n743\n646\n699\n892\n\n\n6\n강력범죄\n유사강간\n776\n127\n113\n103\n96\n99\n99\n139\n\n\n7\n강력범죄\n강제추행\n17053\n2564\n2197\n2263\n2333\n2389\n2547\n2760\n\n\n8\n강력범죄\n기타 강간·강제추행등\n356\n49\n51\n48\n49\n45\n55\n59\n\n\n9\n강력범죄\n방화\n1691\n256\n236\n263\n235\n246\n212\n243\n\n\n11\n폭력범죄\n상해\n39766\n6105\n5326\n5649\n5395\n5396\n5628\n6267\n\n\n12\n폭력범죄\n폭행\n159267\n25977\n20195\n21334\n21160\n21181\n22423\n26997\n\n\n13\n폭력범죄\n체포·감금\n1207\n162\n168\n189\n180\n192\n165\n151\n\n\n14\n폭력범죄\n협박\n17200\n2498\n2462\n2530\n2474\n2444\n2408\n2384\n\n\n15\n폭력범죄\n약취·유인\n187\n29\n34\n27\n26\n30\n26\n15\n\n\n16\n폭력범죄\n폭력행위등\n9204\n1705\n1175\n1205\n1088\n1163\n1206\n1662\n\n\n17\n폭력범죄\n공갈\n4096\n457\n685\n644\n604\n656\n593\n457\n\n\n18\n폭력범죄\n손괴\n56684\n8479\n7452\n7767\n7681\n7514\n8591\n9200\n\n\n20\n지능범죄\n직무유기\n581\n39\n105\n92\n92\n114\n103\n36\n\n\n21\n지능범죄\n직권남용\n603\n33\n96\n110\n110\n110\n104\n40\n\n\n22\n지능범죄\n증수뢰\n347\n22\n53\n57\n69\n64\n61\n21\n\n\n23\n지능범죄\n통화\n1194\n34\n230\n226\n208\n242\n212\n42\n\n\n24\n지능범죄\n문서·인장\n12290\n673\n2202\n1992\n1893\n2710\n1991\n829\n\n\n25\n지능범죄\n유가증권인지\n197\n17\n20\n25\n30\n32\n58\n15\n\n\n26\n지능범죄\n사기\n270029\n19524\n45478\n45020\n45399\n45752\n46698\n22158\n\n\n27\n지능범죄\n횡령\n55113\n6802\n7968\n7793\n7922\n7992\n8817\n7819\n\n\n28\n지능범죄\n배임\n4344\n248\n802\n761\n725\n730\n790\n288"
  },
  {
    "objectID": "posts/project_rev1/index.html",
    "href": "posts/project_rev1/index.html",
    "title": "Project1-5조.crime",
    "section": "",
    "text": "1. EUC-KR\n\n\n2. reindex()\n\n\n3. pd.options.display.float_format\n\n\n4. plt.xticks()\n\n\n5. transform()\n\n\n\n\n\n\n\n항목\n설명\n\n\n\n\nEUC-KR\nExtended Unix Code for Korean, 한국어를 표현하기 위해 설계된 문자 인코딩입니다.\n\n\nreindex()\npandas에서 DataFrame이나 Series의 인덱스를 새로운 값으로 재설정하는 메서드입니다.\n\n\npd.options.display.float_format\npandas의 실수형 숫자를 출력할 때의 포맷을 설정하는 옵션입니다.\n\n\nplt.xticks()\nMatplotlib에서 x축의 눈금과 눈금 레이블을 설정하는 함수입니다.\n\n\ntransform()\npandas에서 데이터의 각 그룹에 대해 함수를 적용하고 같은 크기의 결과를 반환하는 메서드입니다."
  },
  {
    "objectID": "posts/project_rev1/index.html#강력범죄-열-추출",
    "href": "posts/project_rev1/index.html#강력범죄-열-추출",
    "title": "Project1-crime_rev1",
    "section": "2-1. 강력범죄 열 추출",
    "text": "2-1. 강력범죄 열 추출\n\nstrong = crime.iloc[:,0:11]\nstrong.head(3)\n\n\n\n\n\n\n\n\n시점\n범죄발생요일별(1)\n소계\n살인기수\n살인미수등\n강도\n강간\n유사강간\n강제추행\n기타 강간·강제추행등\n방화\n\n\n\n\n0\n시점\n범죄발생요일별(1)\n소계\n살인기수\n살인미수등\n강도\n강간\n유사강간\n강제추행\n기타 강간·강제추행등\n방화\n\n\n1\n2018\n일요일\n4154\n54\n72\n126\n906\n127\n2564\n49\n256\n\n\n2\n2018\n월요일\n3529\n40\n74\n120\n698\n113\n2197\n51\n236"
  },
  {
    "objectID": "posts/project_rev1/index.html#번째-행을-열로-바꾸기",
    "href": "posts/project_rev1/index.html#번째-행을-열로-바꾸기",
    "title": "Project1-crime_rev1",
    "section": "2-2. 0번째 행을 열로 바꾸기",
    "text": "2-2. 0번째 행을 열로 바꾸기\n\nstrong = strong.rename(columns=strong.iloc[0])\nstrong.head(3)\n\n\n\n\n\n\n\n\n시점\n범죄발생요일별(1)\n소계\n살인기수\n살인미수등\n강도\n강간\n유사강간\n강제추행\n기타 강간·강제추행등\n방화\n\n\n\n\n0\n시점\n범죄발생요일별(1)\n소계\n살인기수\n살인미수등\n강도\n강간\n유사강간\n강제추행\n기타 강간·강제추행등\n방화\n\n\n1\n2018\n일요일\n4154\n54\n72\n126\n906\n127\n2564\n49\n256\n\n\n2\n2018\n월요일\n3529\n40\n74\n120\n698\n113\n2197\n51\n236"
  },
  {
    "objectID": "posts/project_rev1/index.html#번째-인덱스-삭제",
    "href": "posts/project_rev1/index.html#번째-인덱스-삭제",
    "title": "Project1-crime_rev1",
    "section": "2-3. 0번째 인덱스 삭제",
    "text": "2-3. 0번째 인덱스 삭제\n\nstrong = strong.drop([0])\nstrong.head(3)\n\n\n\n\n\n\n\n\n시점\n범죄발생요일별(1)\n소계\n살인기수\n살인미수등\n강도\n강간\n유사강간\n강제추행\n기타 강간·강제추행등\n방화\n\n\n\n\n1\n2018\n일요일\n4154\n54\n72\n126\n906\n127\n2564\n49\n256\n\n\n2\n2018\n월요일\n3529\n40\n74\n120\n698\n113\n2197\n51\n236\n\n\n3\n2018\n화요일\n3619\n38\n62\n133\n709\n103\n2263\n48\n263"
  },
  {
    "objectID": "posts/project_rev1/index.html#폭력범죄-동일하게-바꿔주기",
    "href": "posts/project_rev1/index.html#폭력범죄-동일하게-바꿔주기",
    "title": "Project1-crime_rev1",
    "section": "2-4. 폭력범죄 동일하게 바꿔주기",
    "text": "2-4. 폭력범죄 동일하게 바꿔주기\n\ngang = crime.iloc[:,[0,1,11,12,13,14,15,16,17,18,19]]\ngang = gang.rename(columns=strong.iloc[0])\ngang = gang.drop([0])\ngang.head(3)\n\n\n\n\n\n\n\n\n2018\n일요일\n4154\n상해\n폭행\n체포·감금\n협박\n약취·유인\n폭력행위등\n공갈\n손괴\n\n\n\n\n1\n2018\n일요일\n45412\n6105\n25977\n162\n2498\n29\n1705\n457\n8479\n\n\n2\n2018\n월요일\n37497\n5326\n20195\n168\n2462\n34\n1175\n685\n7452\n\n\n3\n2018\n화요일\n39345\n5649\n21334\n189\n2530\n27\n1205\n644\n7767\n\n\n\n\n\n\n\n\nintel = crime.iloc[:,[0,1,20,21,22,23,24,25,26,27,28,29]]\nintel = intel.rename(columns=intel.iloc[0])\nintel = intel.drop([0])\nintel.head(3)\n\n\n\n\n\n\n\n\n시점\n범죄발생요일별(1)\n소계\n직무유기\n직권남용\n증수뢰\n통화\n문서·인장\n유가증권인지\n사기\n횡령\n배임\n\n\n\n\n1\n2018\n일요일\n27392\n39\n33\n22\n34\n673\n17\n19524\n6802\n248\n\n\n2\n2018\n월요일\n56954\n105\n96\n53\n230\n2202\n20\n45478\n7968\n802\n\n\n3\n2018\n화요일\n56076\n92\n110\n57\n226\n1992\n25\n45020\n7793\n761"
  },
  {
    "objectID": "posts/np1/index.html",
    "href": "posts/np1/index.html",
    "title": "넘파이 배열",
    "section": "",
    "text": "0차원 배열: 스칼라, 단순한 하나의 숫자\n1차원 배열: 벡터, 숫자들이 일렬로 구성된 데이터 구조\n2차원 배열: 행렬\n3차원 이상: 텐서"
  },
  {
    "objectID": "posts/np1/index.html#정의",
    "href": "posts/np1/index.html#정의",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "",
    "text": "벡터 : 숫자들의 일렬로 구성된 데이터 구조\n넘파이 벡터: 1차원 넘파이 배열"
  },
  {
    "objectID": "posts/np1/index.html#특징",
    "href": "posts/np1/index.html#특징",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "",
    "text": "동일한 자료형 : 계산의 효율성을 높이기 위해\n고속 연산 : 반복문을 사용하지 않고도 빠른 연산 수행\n다양한 연산 지원: 벡터간의 덧셈, 뺄셈 등 수학적 연산 지원\n메모리의 효율성: 파이썬 리스트보다 메모리를 적게 사용함"
  },
  {
    "objectID": "posts/np1/index.html#차원-넘파이-배열넘파이-벡터-2개-합쳐-2차원-넘파이-배열-만들기-np.vstacknp.array1np.array2",
    "href": "posts/np1/index.html#차원-넘파이-배열넘파이-벡터-2개-합쳐-2차원-넘파이-배열-만들기-np.vstacknp.array1np.array2",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "1차원 넘파이 배열(넘파이 벡터) 2개 합쳐 2차원 넘파이 배열 만들기 np.vstack(np.array1,np.array2)",
    "text": "1차원 넘파이 배열(넘파이 벡터) 2개 합쳐 2차원 넘파이 배열 만들기 np.vstack(np.array1,np.array2)\n\nimport numpy as np\n\nmatrix = np.vstack((\n    np.arange(1,5),\n    np.arange(12,16)\n))\nmatrix\n\narray([[ 1,  2,  3,  4],\n       [12, 13, 14, 15]])"
  },
  {
    "objectID": "posts/np1/index.html#으로-이루어진-2차원-배열-만들기-.zeros",
    "href": "posts/np1/index.html#으로-이루어진-2차원-배열-만들기-.zeros",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "0으로 이루어진 2차원 배열 만들기 : .zeros()",
    "text": "0으로 이루어진 2차원 배열 만들기 : .zeros()\n\nnp.zeros([5,4])\n\narray([[0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.]])"
  },
  {
    "objectID": "posts/np1/index.html#차원-배열을-2차원-배열로-바꾸기-.reshape행열orderc-또는-f",
    "href": "posts/np1/index.html#차원-배열을-2차원-배열로-바꾸기-.reshape행열orderc-또는-f",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "1차원 배열을 2차원 배열로 바꾸기: .reshape((행,열),order=“C 또는 F”)",
    "text": "1차원 배열을 2차원 배열로 바꾸기: .reshape((행,열),order=“C 또는 F”)\n\nnp.arange(1,7).reshape((2,3))\n\narray([[1, 2, 3],\n       [4, 5, 6]])\n\n\n\n.reshape 특징(1) -1을 통해서 크기를 자동으로 결정할 수 있음\n\nnp.arange(1,7).reshape((2,-1))\n\narray([[1, 2, 3],\n       [4, 5, 6]])\n\n\n\nnp.arange(1,7).reshape((-1,3))\n\narray([[1, 2, 3],\n       [4, 5, 6]])\n\n\n\n\n.reshape 특징(2) order=“F”인자로 값의 순서를 정할 수 있음\n\norder=“C” : 행우선, 기본값이라 입력 안하면 자동으로 적용됨\norder=“F” : 열우선\n\n\nnp.arange(1,7).reshape((-1,3),order=\"F\")\n\narray([[1, 3, 5],\n       [2, 4, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#차원-배열의-인덱싱",
    "href": "posts/np1/index.html#차원-배열의-인덱싱",
    "title": "넘파이 배열(1차원:벡터, 2차원:행렬, 3차원:텐서)",
    "section": "2차원 배열의 인덱싱",
    "text": "2차원 배열의 인덱싱\n\nmat_a = np.arange(1,21).reshape((4,5),order=\"F\")\nmat_a\n\narray([[ 1,  5,  9, 13, 17],\n       [ 2,  6, 10, 14, 18],\n       [ 3,  7, 11, 15, 19],\n       [ 4,  8, 12, 16, 20]])\n\n\n\nmat_a[0,0]\nmat_a[1,1]\nmat_a[2,3]\nmat_a[0:2,3]\nmat_a[1:3,1:4]\nmat_b = np.arange(1,101).reshape((20,-1))\nmat_b[1::2,:]\nmat_b[[1,4,6,14],]\n\narray([[ 6,  7,  8,  9, 10],\n       [21, 22, 23, 24, 25],\n       [31, 32, 33, 34, 35],\n       [71, 72, 73, 74, 75]])"
  },
  {
    "objectID": "posts/np1/index.html#참-거짓-값과-인덱싱을-을-이용해-2차원-배열의-값-추출",
    "href": "posts/np1/index.html#참-거짓-값과-인덱싱을-을-이용해-2차원-배열의-값-추출",
    "title": "넘파이 배열",
    "section": "참, 거짓 값과 인덱싱을 을 이용해 2차원 배열의 값 추출",
    "text": "참, 거짓 값과 인덱싱을 을 이용해 2차원 배열의 값 추출\n\nx = np.arange(1, 11).reshape((5, 2)) * 2\nx\nx[[True, True, False, False, True], 0]\n\narray([ 2,  6, 18])"
  },
  {
    "objectID": "posts/np1/index.html#필터링-인덱싱에-조건식을-적용해-필터링",
    "href": "posts/np1/index.html#필터링-인덱싱에-조건식을-적용해-필터링",
    "title": "넘파이 배열",
    "section": "필터링: 인덱싱에 조건식을 적용해 필터링",
    "text": "필터링: 인덱싱에 조건식을 적용해 필터링\nQ. 1 열의 값이 50보다 큰 행들만, 열은 모두 가져오기\n\nmat_b[mat_b[:,1]&gt;50,:] \n\narray([[ 51,  52,  53,  54,  55],\n       [ 56,  57,  58,  59,  60],\n       [ 61,  62,  63,  64,  65],\n       [ 66,  67,  68,  69,  70],\n       [ 71,  72,  73,  74,  75],\n       [ 76,  77,  78,  79,  80],\n       [ 81,  82,  83,  84,  85],\n       [ 86,  87,  88,  89,  90],\n       [ 91,  92,  93,  94,  95],\n       [ 96,  97,  98,  99, 100]])"
  },
  {
    "objectID": "posts/np_image/index.html",
    "href": "posts/np_image/index.html",
    "title": "넘파이 이미지",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(2024)\nimg1 = np.random.rand(3,3)\nimg1\n\narray([[0.58801452, 0.69910875, 0.18815196],\n       [0.04380856, 0.20501895, 0.10606287],\n       [0.72724014, 0.67940052, 0.4738457 ]])\n\n\n\nplt.imshow(img1, cmap='gray', interpolation='nearest')\nplt.colorbar()\nplt.show()"
  },
  {
    "objectID": "posts/np_image/index.html#랜덤으로-0에서-1미만의-소수-구하기-np.random.rand",
    "href": "posts/np_image/index.html#랜덤으로-0에서-1미만의-소수-구하기-np.random.rand",
    "title": "넘파이 이미지",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n\nnp.random.seed(2024)\nimg1 = np.random.rand(3,3)\nimg1\n\narray([[0.58801452, 0.69910875, 0.18815196],\n       [0.04380856, 0.20501895, 0.10606287],\n       [0.72724014, 0.67940052, 0.4738457 ]])\n\n\n\nplt.imshow(img1, cmap='gray', interpolation='nearest')\nplt.colorbar()\nplt.show()"
  },
  {
    "objectID": "posts/np1/index.html#empty-쓰레기값이-들어간-빈-배열",
    "href": "posts/np1/index.html#empty-쓰레기값이-들어간-빈-배열",
    "title": "넘파이 배열",
    "section": "(1) .empty(): 쓰레기값이 들어간 빈 배열",
    "text": "(1) .empty(): 쓰레기값이 들어간 빈 배열\n\nimport numpy as np\n?np.empty\nx = np.empty(3)\n# e^-10은 10^-10이다. 0으로 봐도 무방할 정도로 0에 가까운 수\nx[0] = 3\nx[1] = 5\nx[2] = 3\nx\n\ny = np.empty(3,dtype=int)\ny[0] = 3\ny[1] = 5\ny[2] = 3\ny\n\nz = np.empty([3,3], dtype=int)\nz\nnp.zeros(3) # 0으로 채워진 원소 3개짜리 1차원 배열\n\narray([0., 0., 0.])"
  },
  {
    "objectID": "posts/np1/index.html#zeros-0으로-채워진-배열",
    "href": "posts/np1/index.html#zeros-0으로-채워진-배열",
    "title": "넘파이 배열",
    "section": "(2) .zeros() : 0으로 채워진 배열",
    "text": "(2) .zeros() : 0으로 채워진 배열\n\nnp.zeros(3)\nnp.zeros([3,3])\nnp.zeros([2,2],dtype=int)\n\narray([[0, 0],\n       [0, 0]])"
  },
  {
    "objectID": "posts/np1/index.html#np.array-직접-값-입력",
    "href": "posts/np1/index.html#np.array-직접-값-입력",
    "title": "넘파이 배열",
    "section": "(3) np.array() : 직접 값 입력",
    "text": "(3) np.array() : 직접 값 입력\n\nnp.array([1,2,3])\nnp.array([1,2,3],dtype=float)\n\narray([1., 2., 3.])"
  },
  {
    "objectID": "posts/np1/index.html#np.arange-일정-간격으로-숫자-생성하며-배열-생성",
    "href": "posts/np1/index.html#np.arange-일정-간격으로-숫자-생성하며-배열-생성",
    "title": "넘파이 배열",
    "section": "(4) np.arange() : 일정 간격으로 숫자 생성하며 배열 생성",
    "text": "(4) np.arange() : 일정 간격으로 숫자 생성하며 배열 생성\n\nnp.arange(10) # 0부터 9까지\nnp.arange(1,10,2,dtype=float) # 1부터 9까지 2씩 건너뛰며 생성\nnp.arange(0,2,0.5)\nnp.arange(0,2.1,0.5)\nnp.arange(0,-100,-1)\n-np.arange(100)\n\narray([  0,  -1,  -2,  -3,  -4,  -5,  -6,  -7,  -8,  -9, -10, -11, -12,\n       -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25,\n       -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\n       -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51,\n       -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64,\n       -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77,\n       -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90,\n       -91, -92, -93, -94, -95, -96, -97, -98, -99])"
  },
  {
    "objectID": "posts/np1/index.html#np.linspace-균일-간격으로-배열-생성",
    "href": "posts/np1/index.html#np.linspace-균일-간격으로-배열-생성",
    "title": "넘파이 배열",
    "section": "(5) np.linspace() : 균일 간격으로 배열 생성",
    "text": "(5) np.linspace() : 균일 간격으로 배열 생성\n\nnp.linspace(0,100,5) # 0부터 100까지 균일 간격으로 5개 반환\nnp.linspace(0,100,5,retstep=True) # 0부터 100까지 균일 간격 25도 함께 반환\nnp.linspace(0,100,5,retstep=True,dtype=int)\nnp.linspace(0,100,5,endpoint=False) # 100은 포함하지 않음\nnp.linspace(0,10) # 간격 기본값은 50이므로 1부터 10까지 균일간격으로 50개생성\n\narray([ 0.        ,  0.20408163,  0.40816327,  0.6122449 ,  0.81632653,\n        1.02040816,  1.2244898 ,  1.42857143,  1.63265306,  1.83673469,\n        2.04081633,  2.24489796,  2.44897959,  2.65306122,  2.85714286,\n        3.06122449,  3.26530612,  3.46938776,  3.67346939,  3.87755102,\n        4.08163265,  4.28571429,  4.48979592,  4.69387755,  4.89795918,\n        5.10204082,  5.30612245,  5.51020408,  5.71428571,  5.91836735,\n        6.12244898,  6.32653061,  6.53061224,  6.73469388,  6.93877551,\n        7.14285714,  7.34693878,  7.55102041,  7.75510204,  7.95918367,\n        8.16326531,  8.36734694,  8.57142857,  8.7755102 ,  8.97959184,\n        9.18367347,  9.3877551 ,  9.59183673,  9.79591837, 10.        ])"
  },
  {
    "objectID": "posts/np1/index.html#np.random.randint-랜덤값으로-생성",
    "href": "posts/np1/index.html#np.random.randint-랜덤값으로-생성",
    "title": "넘파이 배열",
    "section": "(6) np.random.randint() : 랜덤값으로 생성",
    "text": "(6) np.random.randint() : 랜덤값으로 생성\n\nnp.random.seed(4) # seed안의 값이 같으면 다른 사람과 같은 랜덤값을 얻을 수 있다\nnp.random.rand(5) # 0부터 1미만의 수 5개\nnp.random.rand(5,3) # 0부터 1미만의 수 5행 3열\nnp.random.randint(0,10,2) # 0부터 10미만의 수 2개\nnp.random.randint(2,5) # 2에서 5미만의 수 1개\nnp.random.randint(2,5,[2,2]) # 2에서 5미만의 수로 채워진 2행2열\n\narray([[4, 2],\n       [2, 4]], dtype=int32)"
  },
  {
    "objectID": "posts/np1/index.html#브로드캐스팅-다른-차원의-배열들의-연산-가능",
    "href": "posts/np1/index.html#브로드캐스팅-다른-차원의-배열들의-연산-가능",
    "title": "넘파이 배열",
    "section": "브로드캐스팅: 다른 차원의 배열들의 연산 가능",
    "text": "브로드캐스팅: 다른 차원의 배열들의 연산 가능\n\n(1) 다차원과 0차원(스칼라)의 연산: 스칼라가 다차원인 것처럼 계산\n\na= np.array([1,2,3])\na*2\n\narray([2, 4, 6])\n\n\n\n\n(2) 다차원과 1차원의 연산: 행이 일치하거나 열이 일치하면 가능\n\na=np.array([[1,2,3],[4,5,6]])\na\nb=np.array([10,20,30])\nb\na*b # b가 [[10,20,30],[10,20,30]]인것처럼 계산\nc=np.array([[10],[20]])\nc\na*c # c가 [[10,10,10],[20,20,20]]인것처럼 계산\n\narray([[ 10,  20,  30],\n       [ 80, 100, 120]])\n\n\n\n\n같은 차원의 경우 길이가 다르면 에러남\n\na = np.array([1, 2, 3, 4])\nb = np.array([1, 2])\n# a+b 에러남\na+np.tile(b,2)\n\narray([2, 4, 4, 6])\n\n\n\n\n배열 길이 맞추기 (1) np.resize() - 값을 앞에서부터 맞춰준다\n\na = np.array([1, 2, 3, 4, 5, 6])\nb = np.array([7, 8, 9, 10])\nnp.resize(b,len(a))\n\narray([ 7,  8,  9, 10,  7,  8])\n\n\n\n\n배열 길이 맞추기 (2) np.repeat() : 배열의 값을 반복\n\nnp.repeat(5,3) # 5가 3번 반복됨\nnp.repeat([1,2,3],3) # 1이 3번, 2가 3번, 3이 3번 반복됨\nnp.repeat([1,2,3],[2,1,4]) # 1이 2번, 2가 1번, 3이 4번 반복됨\nnp.array([[1,2,3],[4,5,6]])\nnp.repeat([[1,2,3],[4,5,6]],3) # 1차원으로 바뀜\nnp.repeat([[1,2,3],[4,5,6]],3,axis=1) # 각 열이 3번 반복됨\nnp.repeat([[1,2,3],[4,5,6]],3,axis=0) # 각 행이 3번 반복됨\n\narray([[1, 2, 3],\n       [1, 2, 3],\n       [1, 2, 3],\n       [4, 5, 6],\n       [4, 5, 6],\n       [4, 5, 6]])\n\n\n\n\n배열 길이 맞추기(3) np.tile() : 배열 자체를 반복\n\nnp.tile(5,3) # 5가 3번 반복됨\nnp.tile([1,2,3],3) # [1,2,3]이 3번 반복됨\nnp.tile([1,2,3],[3,2]) # [1,2,3]이 2번 반복된게 3행 생성\n\narray([[1, 2, 3, 1, 2, 3],\n       [1, 2, 3, 1, 2, 3],\n       [1, 2, 3, 1, 2, 3]])"
  },
  {
    "objectID": "posts/np1/index.html#하나로-합치기-np.concate",
    "href": "posts/np1/index.html#하나로-합치기-np.concate",
    "title": "넘파이 배열",
    "section": "(1) 하나로 합치기: np.concate()",
    "text": "(1) 하나로 합치기: np.concate()\n\na=np.array([1,2])\nb=np.array([4,5,6])\nnp.concatenate((a,b))\n\narray([1, 2, 4, 5, 6])"
  },
  {
    "objectID": "posts/np1/index.html#열로-쌓기-np.column_stack---길이가-같아야-함",
    "href": "posts/np1/index.html#열로-쌓기-np.column_stack---길이가-같아야-함",
    "title": "넘파이 배열",
    "section": "(2) 열로 쌓기: np.column_stack() - 길이가 같아야 함",
    "text": "(2) 열로 쌓기: np.column_stack() - 길이가 같아야 함\n\na=np.array([1,2,3])\nb=np.array([4,5,6])\nnp.column_stack((a,b)) # 첫번째 배열을 0열에, 두번째 배열을 1열에\n\narray([[1, 4],\n       [2, 5],\n       [3, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#행으로-쌓기-np.vstack---길이가-같아야-함",
    "href": "posts/np1/index.html#행으로-쌓기-np.vstack---길이가-같아야-함",
    "title": "넘파이 배열",
    "section": "(3) 행으로 쌓기: np.vstack() - 길이가 같아야 함",
    "text": "(3) 행으로 쌓기: np.vstack() - 길이가 같아야 함\n\na=np.array([1,2,3])\nb=np.array([4,5,6])\nnp.vstack((a,b)) # 첫번쨰 배열을 0행에, 두번쨰 배열을 0행에\n\narray([[1, 2, 3],\n       [4, 5, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#을-통해서-크기를-자동으로-결정할-수-있음",
    "href": "posts/np1/index.html#을-통해서-크기를-자동으로-결정할-수-있음",
    "title": "넘파이 배열",
    "section": "(1) -1을 통해서 크기를 자동으로 결정할 수 있음",
    "text": "(1) -1을 통해서 크기를 자동으로 결정할 수 있음\n\nnp.arange(1,7).reshape((2,-1))\n\narray([[1, 2, 3],\n       [4, 5, 6]])\n\n\n\nnp.arange(1,7).reshape((-1,3))\n\narray([[1, 2, 3],\n       [4, 5, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#orderf인자로-값의-순서를-정할-수-있음",
    "href": "posts/np1/index.html#orderf인자로-값의-순서를-정할-수-있음",
    "title": "넘파이 배열",
    "section": "(2) order=“F”인자로 값의 순서를 정할 수 있음",
    "text": "(2) order=“F”인자로 값의 순서를 정할 수 있음\n\norder=“C” : 행우선, 기본값이라 입력 안하면 자동으로 적용됨\norder=“F” : 열우선\n\n\nnp.arange(1,7).reshape((-1,3),order=\"F\")\n\narray([[1, 3, 5],\n       [2, 4, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#행끼리-열끼리-계산-axis1행끼리-axis0열끼리",
    "href": "posts/np1/index.html#행끼리-열끼리-계산-axis1행끼리-axis0열끼리",
    "title": "넘파이 배열",
    "section": "행끼리, 열끼리 계산: axis=1(행끼리), axis=0(열끼리)",
    "text": "행끼리, 열끼리 계산: axis=1(행끼리), axis=0(열끼리)\n\na = np.array([[1, 2, 3], [4, 5, 6]])\na\na.sum(axis=1) # 행별 합계\na.mean(axis=1) # 행별 평균\na.max(axis=1) # 행별 가장 큰 수\na.min(axis=1) # 행별 가장 작은 수\na.cumsum(axis=1) # 행별 누적합\na.cumprod(axis=1) # 행별 누적곱\nb = np.array([[4,2,1],[3,6,5]])\nb\nb.argmax(axis=1) # 행별 모든 원소 중 가장 큰 수의 인덱스\nb.argmin(axis=1) # 행별 모든 원소 중 가장 작은 수의 인덱스\nb.argmax(axis=0) # 열별 모든 원소 중 가장 큰 수의 인덱스\nb.argmin(axis=0) # 열별 모든 원소 중 가장 작은 수의 인덱스\n\narray([1, 0, 0])"
  },
  {
    "objectID": "posts/np1/index.html#section",
    "href": "posts/np1/index.html#section",
    "title": "넘파이 배열",
    "section": "1.",
    "text": "1.\n\nA = np.array([[3,5,7],[2,3,6]])\nA\n\narray([[3, 5, 7],\n       [2, 3, 6]])"
  },
  {
    "objectID": "posts/np1/index.html#section-1",
    "href": "posts/np1/index.html#section-1",
    "title": "넘파이 배열",
    "section": "2.",
    "text": "2.\n\nB = np.array([[8,10,7,8],[2,4,5,5],[7,6,1,7],[2,6,8,6],[9,3,4,2]])\nB\nB[[1,3,4],:]\n\narray([[2, 4, 5, 5],\n       [2, 6, 8, 6],\n       [9, 3, 4, 2]])"
  },
  {
    "objectID": "posts/np1/index.html#section-2",
    "href": "posts/np1/index.html#section-2",
    "title": "넘파이 배열",
    "section": "3.",
    "text": "3.\n\nB[B[:,2]&gt;3,:]\n\narray([[ 8, 10,  7,  8],\n       [ 2,  4,  5,  5],\n       [ 2,  6,  8,  6],\n       [ 9,  3,  4,  2]])"
  },
  {
    "objectID": "posts/np1/index.html#section-3",
    "href": "posts/np1/index.html#section-3",
    "title": "넘파이 배열",
    "section": "4.",
    "text": "4.\n\nrow_sums = np.sum(B, axis =1)\nprint(\"각 행별 합계:\\n\", row_sums)\nB[row_sums&gt;=20,:]\n\n각 행별 합계:\n [33 16 21 22 18]\n\n\narray([[ 8, 10,  7,  8],\n       [ 7,  6,  1,  7],\n       [ 2,  6,  8,  6]])"
  },
  {
    "objectID": "posts/np1/index.html#section-4",
    "href": "posts/np1/index.html#section-4",
    "title": "넘파이 배열",
    "section": "5.",
    "text": "5.\n\nB\nB.mean(axis=0)\nnp.where(B.mean(axis=0)&gt;5)[0]\n\narray([0, 1, 3])"
  },
  {
    "objectID": "posts/np1/index.html#section-5",
    "href": "posts/np1/index.html#section-5",
    "title": "넘파이 배열",
    "section": "6.",
    "text": "6.\n\nnp.sum(B &gt;=5)\nnp.sum(B&gt;7, axis=1)\nB[np.sum(B&gt;7, axis=1)&gt;0,:]\n\narray([[ 8, 10,  7,  8],\n       [ 2,  6,  8,  6],\n       [ 9,  3,  4,  2]])"
  },
  {
    "objectID": "posts/plot/index.html",
    "href": "posts/plot/index.html",
    "title": "plotly를 이용한 그래프 그리기",
    "section": "",
    "text": "import pandas as pd\n\nmpg=pd.read_csv('mpg.csv')\nmpg.shape\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px"
  },
  {
    "objectID": "posts/plot/index.html#q1.-barplot",
    "href": "posts/plot/index.html#q1.-barplot",
    "title": "plot",
    "section": "",
    "text": "import pandas as pd\n\nmpg=pd.read_csv('mpg.csv')\nmpg.shape\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "posts/plot/index.html#mpg데이터의-cty와-hwy로-된-산점도-그래프",
    "href": "posts/plot/index.html#mpg데이터의-cty와-hwy로-된-산점도-그래프",
    "title": "plotly를 이용한 그래프 그리기",
    "section": "1. mpg데이터의 cty와 hwy로 된 산점도 그래프",
    "text": "1. mpg데이터의 cty와 hwy로 된 산점도 그래프\n\nmpg=pd.read_csv('mpg.csv')\nsns.scatterplot(data=mpg,x='cty',y='hwy',hue='drv')\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nplotly를 사용한 상자그림\n\n\npx.scatter(data_frame=mpg,x='cty',y='hwy',color='drv')"
  },
  {
    "objectID": "posts/plot/index.html#midwest데이터의-cty와-hwy로-된-산점도-그래프",
    "href": "posts/plot/index.html#midwest데이터의-cty와-hwy로-된-산점도-그래프",
    "title": "plotly를 이용한 그래프 그리기",
    "section": "2. midwest데이터의 cty와 hwy로 된 산점도 그래프",
    "text": "2. midwest데이터의 cty와 hwy로 된 산점도 그래프\n\nmidwest=pd.read_csv('midwest.csv')\nsns.scatterplot(data=midwest, x='poptotal', y='popasian').set(xlim=[0,500000],ylim=[0,10000])\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\nplotly를 사용한 상자그림\n\n\npx.scatter(data_frame=midwest,x='poptotal', y='popasian', range_x=[0,500000],range_y=[0,10000] )"
  },
  {
    "objectID": "posts/hw3/index.html",
    "href": "posts/hw3/index.html",
    "title": "LS 빅데이터 스쿨 Homework 3",
    "section": "",
    "text": "1. 정규분포 pdf값을 계산하는 자신만의 파이썬 함수를 정의하고,정규분포 mu=3, sigma=2의 pdf를 그릴 것\n\n# X ~ N(3,2)\n\ndef npdf(x, mu,sigma):\n    x=np.array(x)\n    part1 = 1 / (sigma * np.sqrt(2 * np.pi))\n    part2 = np.exp((-1/2) * ((x-mu)/np.pi)**2)\n    y = part1 * part2\n    return y\n# math.exp()는 값 1개만 받을 수 있어서 npdf(리스트)를 하고 싶으면 for문으로 하나씩 넣거나 벡터를 연산해주는 np.exp()를 쓰면 된다.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nx_values = np.linspace(3-3*2,3+3*2,100)\npdf_values = npdf(x_values,3,2)\nplt.plot(x_values, pdf_values, color='red', linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오\n\n\nX ~ N(2,3^2)\n\n\n1) P(x&lt;3)\n\nnorm.cdf(3,loc=2, scale=3)\n\nnp.float64(0.6305586598182363)\n\n\n\n\n2) P(2&lt;x&lt;5)\n\nnorm.cdf(5,loc=2,scale=3) - norm.cdf(2,2,3)\n\nnp.float64(0.3413447460685429)\n\n\n\n\n3) P(x&lt;3 or x&gt;7)\n\nnorm.cdf(3,2,3) + 1 - norm.cdf(7,2,3)\n\nnp.float64(0.6783490120910509)\n\n\n\n\n3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는?\n\n# X ~ N(30, 4=2^2) \n# P(x &gt;= 0.95)\nnorm.ppf(0.95, 30, 2)\n\nnp.float64(33.28970725390295)"
  },
  {
    "objectID": "posts/pj1_crime/index.html",
    "href": "posts/pj1_crime/index.html",
    "title": "TEAM PROJECT 1",
    "section": "",
    "text": "어느 요일이 범죄로부터 가장 안전할까?\n2018~2022년 강력/폭력/지능범죄의 요일별 발생 건수 데이터\n\n\n\n\n\n\n가설\n\n\n\n평일이 상대적으로 안전할 것이다.\n\n\n\n\n\n\n\n\n범죄의 정의\n\n\n\n\n강력범죄 : 생명, 신체, 자유에 심각한 위협을 가하는 범죄\n폭력범죄 : 다른 사람에게 신체적 상해를 입히거나 신체적 위협을 가하는 범죄\n지능범죄 : 지적 능력과 계획을 통해 이루어지며, 주로 경제적 이득을 얻기 위한 범죄\n\n\n\n\n\n\n[데이터 로드]\n\n# 0. 패키지 로드\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# 1. 데이터 파일 불러오기, 원본 데이터 복사하기\n## header: 원본의 두 번째 행 데이터를 열의 이름으로 지정\n## encoding: UnicodeDecodeError 발생으로 한글 표현 가능한 인코딩 방식인 EUC-KR 지정\n## pd.set_option(): 전체 열을 모두 표시하도록 지정\npd.set_option('display.max_columns', None)\ndf = pd.read_csv('crime.csv', header = 1, encoding = 'EUC-KR')\ndf.head()\n\n# 2. 원본 데이터 복사하기\n## deepcopy로 원본유지\ncrime = df.copy()\n\n\n\n[변수명 변경]\n\n# 3. 열 이름, 원소 이름 변경\n## 열 이름 변경\n### 강력범죄는 s_, 폭력범죄는 g_, 지능범죄는 i_로 시작하도록 변경\ncrime.columns\ncrime.columns = ['year','day']\\\n                + [i.replace(i, \"s_\"+i) for i in crime.columns[2:10]]\\\n                + [i.replace(i, \"g_\"+i) for i in crime.columns[10:18]]\\\n                + [i.replace(i, \"i_\"+i) for i in crime.columns[18:27]]\n\n## 원소 이름 변경\n## replace(): 요일을 영어로 일괄 변경\ncrime = crime.replace({'월요일':'mon',\n                       '화요일':'tue',\n                       '수요일':'wed',\n                       '목요일':'thu',\n                       '금요일':'fri',\n                       '토요일':'sat',\n                       '일요일':'sun'})\ncrime.head(7)\n\n## reindex(): 행의 순서 바꾸기(일&gt;토에서 월&gt;일로) &gt; 추후 그래프 순서를 위해서 설정\nlen(crime)\ncrime = crime.reindex([1, 2, 3, 4, 5, 6, 0,\n                       8, 9, 10, 11, 12, 13, 7,\n                       15, 16, 17, 18, 19, 20, 14,\n                       22, 23, 24, 25, 26, 27, 21,\n                       29, 30, 31, 32, 33, 34, 28])\ncrime.head(7)\n\n\n\n\n\n\n\n\nyear\nday\ns_살인기수\ns_살인미수등\ns_강도\ns_강간\ns_유사강간\ns_강제추행\ns_기타 강간·강제추행등\ns_방화\ng_상해\ng_폭행\ng_체포·감금\ng_협박\ng_약취·유인\ng_폭력행위등\ng_공갈\ng_손괴\ni_직무유기\ni_직권남용\ni_증수뢰\ni_통화\ni_문서·인장\ni_유가증권인지\ni_사기\ni_횡령\ni_배임\n\n\n\n\n1\n2018\nmon\n40\n74\n120\n698\n113\n2197\n51\n236\n5326\n20195\n168\n2462\n34\n1175\n685\n7452\n105\n96\n53\n230\n2202\n20\n45478\n7968\n802\n\n\n2\n2018\ntue\n38\n62\n133\n709\n103\n2263\n48\n263\n5649\n21334\n189\n2530\n27\n1205\n644\n7767\n92\n110\n57\n226\n1992\n25\n45020\n7793\n761\n\n\n3\n2018\nwed\n53\n68\n116\n743\n96\n2333\n49\n235\n5395\n21160\n180\n2474\n26\n1088\n604\n7681\n92\n110\n69\n208\n1893\n30\n45399\n7922\n725\n\n\n4\n2018\nthu\n41\n76\n117\n646\n99\n2389\n45\n246\n5396\n21181\n192\n2444\n30\n1163\n656\n7514\n114\n110\n64\n242\n2710\n32\n45752\n7992\n730\n\n\n5\n2018\nfri\n54\n67\n101\n699\n99\n2547\n55\n212\n5628\n22423\n165\n2408\n26\n1206\n593\n8591\n103\n104\n61\n212\n1991\n58\n46698\n8817\n790\n\n\n6\n2018\nsat\n29\n69\n108\n892\n139\n2760\n59\n243\n6267\n26997\n151\n2384\n15\n1662\n457\n9200\n36\n40\n21\n42\n829\n15\n22158\n7819\n288\n\n\n0\n2018\nsun\n54\n72\n126\n906\n127\n2564\n49\n256\n6105\n25977\n162\n2498\n29\n1705\n457\n8479\n39\n33\n22\n34\n673\n17\n19524\n6802\n248\n\n\n\n\n\n\n\n\n\n[파생변수 추가]\n\n# 4. 파생변수 추가\n## 범죄별 건수 합계 및 총 범죄 건수 합계 파생변수\ncrime = crime.assign(\n    total_s = crime.iloc[:, 2:10].sum(axis = 1),\n    total_g = crime.iloc[:, 10:18].sum(axis = 1),\n    total_i = crime.iloc[:, 18:27].sum(axis = 1),\n    total = crime.iloc[:, 2:27].sum(axis = 1))\ncrime.head()\n\n## 평일/주말 구분 라벨 파생변수\n### 평일: 월~금, 주말: 토~일\ncrime['day_label'] = np.where(crime['day'].isin(['mon', 'tue', 'wed', 'thu', 'fri']), \\\n                                                 'week', 'weekend')\ncrime.head(7)\n\n\n\n\n\n\n\n\nyear\nday\ns_살인기수\ns_살인미수등\ns_강도\ns_강간\ns_유사강간\ns_강제추행\ns_기타 강간·강제추행등\ns_방화\ng_상해\ng_폭행\ng_체포·감금\ng_협박\ng_약취·유인\ng_폭력행위등\ng_공갈\ng_손괴\ni_직무유기\ni_직권남용\ni_증수뢰\ni_통화\ni_문서·인장\ni_유가증권인지\ni_사기\ni_횡령\ni_배임\ntotal_s\ntotal_g\ntotal_i\ntotal\nday_label\n\n\n\n\n1\n2018\nmon\n40\n74\n120\n698\n113\n2197\n51\n236\n5326\n20195\n168\n2462\n34\n1175\n685\n7452\n105\n96\n53\n230\n2202\n20\n45478\n7968\n802\n3529\n37497\n56954\n97980\nweek\n\n\n2\n2018\ntue\n38\n62\n133\n709\n103\n2263\n48\n263\n5649\n21334\n189\n2530\n27\n1205\n644\n7767\n92\n110\n57\n226\n1992\n25\n45020\n7793\n761\n3619\n39345\n56076\n99040\nweek\n\n\n3\n2018\nwed\n53\n68\n116\n743\n96\n2333\n49\n235\n5395\n21160\n180\n2474\n26\n1088\n604\n7681\n92\n110\n69\n208\n1893\n30\n45399\n7922\n725\n3693\n38608\n56448\n98749\nweek\n\n\n4\n2018\nthu\n41\n76\n117\n646\n99\n2389\n45\n246\n5396\n21181\n192\n2444\n30\n1163\n656\n7514\n114\n110\n64\n242\n2710\n32\n45752\n7992\n730\n3659\n38576\n57746\n99981\nweek\n\n\n5\n2018\nfri\n54\n67\n101\n699\n99\n2547\n55\n212\n5628\n22423\n165\n2408\n26\n1206\n593\n8591\n103\n104\n61\n212\n1991\n58\n46698\n8817\n790\n3834\n41040\n58834\n103708\nweek\n\n\n6\n2018\nsat\n29\n69\n108\n892\n139\n2760\n59\n243\n6267\n26997\n151\n2384\n15\n1662\n457\n9200\n36\n40\n21\n42\n829\n15\n22158\n7819\n288\n4299\n47133\n31248\n82680\nweekend\n\n\n0\n2018\nsun\n54\n72\n126\n906\n127\n2564\n49\n256\n6105\n25977\n162\n2498\n29\n1705\n457\n8479\n39\n33\n22\n34\n673\n17\n19524\n6802\n248\n4154\n45412\n27392\n76958\nweekend\n\n\n\n\n\n\n\n\n\n[범죄별, 평일/주말별 건수 합계 그래프]\n\n# 5. (1)발생 건수 합계 기준 그래프\n## 연도 기준 범죄별 건수 합계\n### 그래프 설정\nplt.rcParams.update({'font.family':'Malgun Gothic','font.size' : 10})\nplt.figure(figsize = (8, 6))\n\n### 집단별 합계표 생성\nyear_total = crime.groupby('year')\\\n                  .agg(강력범죄=('total_s','sum'),\n                       폭력범죄=('total_g','sum'),\n                       지능범죄=('total_i','sum'))\n\n### 그래프 생성                       \nyear_total.plot.barh(stacked = True)\nplt.xlabel(\"건수\")\nplt.ylabel(\"연도\")\nplt.title(\"각 범죄 발생 건수 비율 그래프\")\nplt.show()\nplt.clf()\n\n## 평일/주말 기준 건수 합계\n### 평일/주말별 건수 합계표 생성\nweek_end = crime.groupby('day_label', as_index = False) \\\n                .agg(total=('total', 'sum'))\n\n### 그래프 생성                \nsns.barplot(data = week_end, x = 'day_label', y = 'total', hue = 'day_label')\nplt.xlabel(\"평일/주말\")\nplt.ylabel(\"건수(백만)\")\nplt.title(\"평일/주말별 범죄 발생 건수 그래프\")\nplt.show()\nplt.clf()\n\n&lt;Figure size 768x576 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n위 그래프의 한계\n\n\n\n\n각 범죄별 발생 건수의 볼륨 차이, 평일(5일)/주말(2일) 일수 차이 확인\n\n따라서, 합계로 비교하는데 오류가 있다는 판단\n\n\n\n\n\n\n[범죄별 요일별 건수 비율 그래프]\n\n# 5. (2)연도별 범죄 발생 비율 파생변수 추가\n## pd.options.display.float_format : 소수점 둘째 자리까지만 보이도록 설정\npd.options.display.float_format = '{:.2f}'.format\n\nfor i in [\"_s\", \"_g\" ,\"_i\" ,\"\"]:\n    for j in range(2018, 2023):\n        crime.loc[crime['year'] == j, 'total'+ i +'_year'] = sum(crime.loc[crime['year'] == j,'total' + i])\n    crime['ratio'+ i +'_day'] = crime['total' + i] / crime['total'+ i +'_year'] * 100\n\n## 아래 코드도 같은 결과 \n### crime = crime.assign(\n###               total_s_year = lambda x: x.groupby('year')['total_s'].transform('sum'), \n###               ratio_s_day = lambda x: x['total_s'] / x['total_s_year'] * 100,\n###\n###               total_g_year = lambda x: x.groupby('year')['total_g'].transform('sum'),\n###               ratio_g_day = lambda x: x['total_g'] / x['total_g_year'] * 100,\n###\n###               total_i_year = lambda x: x.groupby('year')['total_i'].transform('sum'),\n###               ratio_i_day = lambda x: x['total_i'] / x['total_i_year'] * 100,\n###\n###               total_year = lambda x: x.groupby('year')['total'].transform('sum'),\n###               ratio_day = lambda x: x['total'] / x['total_year'] * 100)\n    \ncrime.head(10)\n\n\n\n\n\n\n\n\nyear\nday\ns_살인기수\ns_살인미수등\ns_강도\ns_강간\ns_유사강간\ns_강제추행\ns_기타 강간·강제추행등\ns_방화\ng_상해\ng_폭행\ng_체포·감금\ng_협박\ng_약취·유인\ng_폭력행위등\ng_공갈\ng_손괴\ni_직무유기\ni_직권남용\ni_증수뢰\ni_통화\ni_문서·인장\ni_유가증권인지\ni_사기\ni_횡령\ni_배임\ntotal_s\ntotal_g\ntotal_i\ntotal\nday_label\ntotal_s_year\nratio_s_day\ntotal_g_year\nratio_g_day\ntotal_i_year\nratio_i_day\ntotal_year\nratio_day\n\n\n\n\n1\n2018\nmon\n40\n74\n120\n698\n113\n2197\n51\n236\n5326\n20195\n168\n2462\n34\n1175\n685\n7452\n105\n96\n53\n230\n2202\n20\n45478\n7968\n802\n3529\n37497\n56954\n97980\nweek\n26787.00\n13.17\n287611.00\n13.04\n344698.00\n16.52\n659096.00\n14.87\n\n\n2\n2018\ntue\n38\n62\n133\n709\n103\n2263\n48\n263\n5649\n21334\n189\n2530\n27\n1205\n644\n7767\n92\n110\n57\n226\n1992\n25\n45020\n7793\n761\n3619\n39345\n56076\n99040\nweek\n26787.00\n13.51\n287611.00\n13.68\n344698.00\n16.27\n659096.00\n15.03\n\n\n3\n2018\nwed\n53\n68\n116\n743\n96\n2333\n49\n235\n5395\n21160\n180\n2474\n26\n1088\n604\n7681\n92\n110\n69\n208\n1893\n30\n45399\n7922\n725\n3693\n38608\n56448\n98749\nweek\n26787.00\n13.79\n287611.00\n13.42\n344698.00\n16.38\n659096.00\n14.98\n\n\n4\n2018\nthu\n41\n76\n117\n646\n99\n2389\n45\n246\n5396\n21181\n192\n2444\n30\n1163\n656\n7514\n114\n110\n64\n242\n2710\n32\n45752\n7992\n730\n3659\n38576\n57746\n99981\nweek\n26787.00\n13.66\n287611.00\n13.41\n344698.00\n16.75\n659096.00\n15.17\n\n\n5\n2018\nfri\n54\n67\n101\n699\n99\n2547\n55\n212\n5628\n22423\n165\n2408\n26\n1206\n593\n8591\n103\n104\n61\n212\n1991\n58\n46698\n8817\n790\n3834\n41040\n58834\n103708\nweek\n26787.00\n14.31\n287611.00\n14.27\n344698.00\n17.07\n659096.00\n15.73\n\n\n6\n2018\nsat\n29\n69\n108\n892\n139\n2760\n59\n243\n6267\n26997\n151\n2384\n15\n1662\n457\n9200\n36\n40\n21\n42\n829\n15\n22158\n7819\n288\n4299\n47133\n31248\n82680\nweekend\n26787.00\n16.05\n287611.00\n16.39\n344698.00\n9.07\n659096.00\n12.54\n\n\n0\n2018\nsun\n54\n72\n126\n906\n127\n2564\n49\n256\n6105\n25977\n162\n2498\n29\n1705\n457\n8479\n39\n33\n22\n34\n673\n17\n19524\n6802\n248\n4154\n45412\n27392\n76958\nweekend\n26787.00\n15.51\n287611.00\n15.79\n344698.00\n7.95\n659096.00\n11.68\n\n\n8\n2019\nmon\n45\n70\n113\n686\n99\n2272\n53\n181\n4908\n19966\n189\n3013\n40\n1126\n818\n7974\n108\n126\n46\n186\n2130\n22\n52740\n8559\n859\n3519\n38034\n64776\n106329\nweek\n26476.00\n13.29\n287913.00\n13.21\n381533.00\n16.98\n695922.00\n15.28\n\n\n9\n2019\ntue\n48\n68\n116\n734\n109\n2306\n45\n181\n5063\n20766\n170\n3039\n41\n1100\n740\n7634\n123\n118\n42\n169\n1971\n16\n51876\n8128\n730\n3607\n38553\n63173\n105333\nweek\n26476.00\n13.62\n287913.00\n13.39\n381533.00\n16.56\n695922.00\n15.14\n\n\n10\n2019\nwed\n40\n62\n105\n719\n92\n2358\n49\n209\n5038\n20981\n171\n3072\n34\n1086\n757\n7766\n106\n97\n52\n187\n1840\n30\n51225\n8318\n787\n3634\n38905\n62642\n105181\nweek\n26476.00\n13.73\n287913.00\n13.51\n381533.00\n16.42\n695922.00\n15.11\n\n\n\n\n\n\n\n\n# 5. (3)연도/요일별 범죄 발생 비율 변화 그래프\n## 연도/요일별 범죄 발생 비율표 생성\nratio_year_day = crime.iloc[:, [0, 1, -7, -5, -3, -1]]\nratio_year_day.head(7)\n\n## 강력범죄 연도/요일별 범죄 발생 비율 변화 그래프\n### plt.xticks() : x축의 범위를 2018~2022로 설정\nsns.lineplot(data = ratio_year_day, x = 'day', y = 'ratio_s_day', hue = 'year')\nplt.xlabel(\"요일\")\nplt.ylabel(\"비율(%)\")\nplt.title(\"강력범죄 요일별 범죄율 비교 그래프\")\nplt.show()\nplt.clf()\n\n## 폭력범죄 연도/요일별 범죄 발생 비율 변화 그래프\nsns.lineplot(data = ratio_year_day, x = 'day', y = 'ratio_g_day', hue = 'year')\nplt.xlabel(\"요일\")\nplt.ylabel(\"비율(%)\")\nplt.title(\"폭력범죄 요일별 범죄율 비교 그래프\")\nplt.show()\nplt.clf()\n\n## 지능범죄 연도/요일별 범죄 발생 비율 변화 그래프\nsns.lineplot(data = ratio_year_day, x = 'day', y = 'ratio_i_day', hue = 'year')\nplt.xlabel(\"요일\")\nplt.ylabel(\"비율(%)\")\nplt.title(\"지능범죄 요일별 범죄율 비교 그래프\")\nplt.show()\nplt.clf()\n\n## 전체 범죄 연도/요일별 범죄 발생 비율 변화 그래프\nsns.lineplot(data = ratio_year_day, x = 'day', y = 'ratio_day', hue = 'year')\nplt.xlabel(\"요일\")\nplt.ylabel(\"비율(%)\")\nplt.title(\"전체 범죄 요일별 범죄율 비교 그래프\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n위 그래프의 한계\n\n\n\n\n범죄별 그래프로 각 범죄의 요일별 발생 비율은 파악할 수 있으나,\n\n지능범죄의 주말 발생 건수가 현저히 낮아 전체 그래프에서 왜곡이 발생\n\n\n따라서, 연도 기준으로 데이터를 비교하는데 오류가 있다는 판단\n\n\n\n\n\n\n[요일 기준 범죄별 비율 비교 그래프]\n\n# 6. 요일별 전체 범죄 발생 비율 그래프\n## 요일별 전체 범죄 발생 비율표 생성\ntotal_day = crime.groupby('day') \\\n                 .agg(total_s = ('total_s', 'sum'),\n                      total_g = ('total_g', 'sum'),\n                      total_i = ('total_i', 'sum'),\n                      total = ('total', 'sum'))\n\ntotal_day = total_day.assign(\n    강력범죄 = lambda x: x['total_s'] / sum(x['total_s']) * 100,\n    폭력범죄 = lambda x: x['total_g'] / sum(x['total_g']) * 100,\n    지능범죄 = lambda x: x['total_i'] / sum(x['total_i']) * 100,\n    총_범죄율 = lambda x: x['total'] / sum(x['total']) * 100)\n\ntotal_day = total_day.reindex(index=['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'])\n\nratio_total_day = total_day.iloc[:, 4:]\nratio_total_day\n\n## 요일별 전체 범죄 발생 비율 그래프 생성\nsns.lineplot(data = ratio_total_day)\nplt.xlabel(\"요일\")\nplt.ylabel(\"비율(%)\")\nplt.title(\"요일 기준 범죄율 비교 그래프\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n결론\n\n\n\n\n강력범죄/폭력범죄는 가설에 성립하지만, 지능범죄는 반대의 결과가 도출되었다.\n\n따라서, 강력범죄는 화요일/폭력범죄는 월요일/지능범죄는 일요일이 가장 안전하다.\n\n\n\n\n\n\n\n\n\n\n생각해볼 점\n\n\n\n지능범죄가 평일에 많이 발생하는 이유는, 공공기관/기업 업무 시간에 이루어져야 하는 행위가 많기 때문이라고 추측된다.\n\n\n\n\n\n\n\n\n분석 발전 방향\n\n\n\n\n데이터 추가\n\n범죄 발생 시간 : 특정 요일의 어느 시간대에 범죄가 주로 발생하는지 분석\n사회적/경제적 요인 : 실업률, 소득 수준, 인구 밀도 등 사회적/경제적 요인으로 차이가 있는지 분석\n이벤트/축제 정보 : 특정 요일과 기간에 개최된 이벤트, 축제, 공휴일 등의 요인으로 차이가 있는지 분석"
  },
  {
    "objectID": "posts/plot/index.html#mpg데이터에서-suv-차종을-대상으로-cty-평균이-가장-높은-manufacturer-다섯-곳을-막대-그래프로-표현연비가-높은-순으로211p",
    "href": "posts/plot/index.html#mpg데이터에서-suv-차종을-대상으로-cty-평균이-가장-높은-manufacturer-다섯-곳을-막대-그래프로-표현연비가-높은-순으로211p",
    "title": "plotly를 이용한 그래프 그리기",
    "section": "3.mpg데이터에서 suv 차종을 대상으로 cty 평균이 가장 높은 manufacturer 다섯 곳을 막대 그래프로 표현(연비가 높은 순으로)211p",
    "text": "3.mpg데이터에서 suv 차종을 대상으로 cty 평균이 가장 높은 manufacturer 다섯 곳을 막대 그래프로 표현(연비가 높은 순으로)211p\n\ntop_mean_cty = mpg.query('category == \"suv\"')\\\n                  .groupby('manufacturer', as_index=False)\\\n                  .agg(mean_cty = ('cty','mean'))\\\n                  .sort_values('mean_cty',ascending=False)\\\n                  .head()\nsns.barplot(data= top_mean_cty, x='manufacturer', y='mean_cty', hue='manufacturer')\nplt.show()"
  },
  {
    "objectID": "posts/plot/index.html#sns.barplot을-이용해-category별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "href": "posts/plot/index.html#sns.barplot을-이용해-category별-빈도를-표현한-막대-그래프를-만들어-보세요.-막대는-빈도가-높은-순으로-정렬하세요.",
    "title": "plotly를 이용한 그래프 그리기",
    "section": "2. sns.barplot()을 이용해 category별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.",
    "text": "2. sns.barplot()을 이용해 category별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ncount_category = mpg.groupby('category',as_index=False)\\\n                    .agg(n=('category','count'))\\\n                    .sort_values('n',ascending=False)\nsns.barplot(data = count_category, x='category', y='n', hue='category')\n\n\n\n\n\n\n\n\n\nsns.countplot() 이용해 풀어보기기\n\nsns.countplot(data=mpg, x='category',\n              order=mpg['category'].value_counts().index,\n              hue='category')\nplt.show()"
  },
  {
    "objectID": "posts/hw4/index.html",
    "href": "posts/hw4/index.html",
    "title": "LS 빅데이터 스쿨 Homework 4",
    "section": "",
    "text": "표본 분산 계산 시 왜 n-1로 나누는지 알아보도록 하겠습니다.\n\n\n\n\n\n\n\n\n# X ~ 균일분포 U(a, b)\n# loc: a, scale: b-a\nimport numpy as np\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000).reshape(-1,20)\n\nk_2 = np.var(x, axis=1)\n# k_2 *20/19 하면 s_2랑 같아짐. 20으로 나눌걸 19로 나눈거니까\nplt.hist(k_2)\n\ns_2 = np.var(x, ddof=1, axis=1)\nplt.hist(s_2)\n\nx_var= uniform.var(loc=3, scale=4)\n20/19\nk_2.mean()-s_2.mean()\nplt.axvline(x_var, color='green', linestyle='--', linewidth=2)\nplt.axvline(k_2.mean(), color='red', linestyle='--', linewidth=2)\nplt.axvline(s_2.mean(), color='black', linestyle='--', linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\nn-1로 나눈 값이 n으로 나누었을때보다 모분산에 가깝기 때문이다."
  },
  {
    "objectID": "posts/hw4/index.html#균일분포-3-7에서-20개의-표본을-뽑아서-분산을-2가지-방법으로-추정해보세요.",
    "href": "posts/hw4/index.html#균일분포-3-7에서-20개의-표본을-뽑아서-분산을-2가지-방법으로-추정해보세요.",
    "title": "LS 빅데이터 스쿨 Homework 4",
    "section": "",
    "text": "# X ~ 균일분포 U(a, b)\n# loc: a, scale: b-a\nimport numpy as np\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000).reshape(-1,20)\n\nk_2 = np.var(x, axis=1)\n# k_2 *20/19 하면 s_2랑 같아짐. 20으로 나눌걸 19로 나눈거니까\nplt.hist(k_2)\n\ns_2 = np.var(x, ddof=1, axis=1)\nplt.hist(s_2)\n\nx_var= uniform.var(loc=3, scale=4)\n20/19\nk_2.mean()-s_2.mean()\nplt.axvline(x_var, color='green', linestyle='--', linewidth=2)\nplt.axvline(k_2.mean(), color='red', linestyle='--', linewidth=2)\nplt.axvline(s_2.mean(), color='black', linestyle='--', linewidth=2)\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n\n\nn-1로 나눈 값이 n으로 나누었을때보다 모분산에 가깝기 때문이다."
  },
  {
    "objectID": "posts/stat1/index.html",
    "href": "posts/stat1/index.html",
    "title": "통계계",
    "section": "",
    "text": "모집단: 특성을알아내고싶은전체집단\n표본집단: 모집단에서선택된부분집단\n표본추출 방법 중 단순랜덤추출:𝑁개중𝑛개를임의로선택하여추출 어떤실험에서나올수있는결과의경우의수가여러개이고,실험을진행하기전에어떠한결과가 나올지예측불가능하며,각결과가나올가능성을수치화할수있는실험\n표본공간(S): 랜덤실험으로부터나올수있는결과값들의집합\n사건(event): 표본공간의 부분집합\n확률함수(P): 어떤사건이일어나는가능성을측정하는함수(입력값은 사건, 결과값은 1과 0사이의 실수)\n확률변수(X): 는표본공간의원소들(실험의결과값)에정의된실수값을갖는함수\n확률분포: 확률변수𝑋의 값에 대응하는 확률이 어떻게 퍼져있는지 나타내는 용어. 확률변수𝑋가 가질 수 있는 값 𝑥에 대응하는 확률을 시각화 한 것 𝑋∼𝑓x : 확률변수 X가 확률분포 𝑓를 따른다.\n기대값(확률변수의 평균): 확률변수가가질수있는각각의값에그값이나타날확률을곱한 값들의합. 확률이 전체 횟수중의 빈도이므로 평균으로 볼 수 있다. 확률분포의무게중심을 잡아내는지표 # 이산형 확률변수와 확률질량함수 ## 1. 베르누이 분포\n\nfrom scipy.stats import bernoulli bernoulli.pmf(k, p) bernoulli.cdf(k, p) bernoulli.ppf(q, p) bernoulli.rvs(p, size, random_state)\n\n\nfrom scipy.stats import binom binom.pmf(k, n, p) binom.cdf(k, n, p) binom.ppf(q, n, p) binom.rvs(n, p, size=1, random_state=None)"
  },
  {
    "objectID": "posts/stat1/index.html#이항분포",
    "href": "posts/stat1/index.html#이항분포",
    "title": "통계계",
    "section": "",
    "text": "from scipy.stats import binom binom.pmf(k, n, p) binom.cdf(k, n, p) binom.ppf(q, n, p) binom.rvs(n, p, size=1, random_state=None)"
  },
  {
    "objectID": "posts/stat1/index.html#균일분포",
    "href": "posts/stat1/index.html#균일분포",
    "title": "통계계",
    "section": "1. 균일분포",
    "text": "1. 균일분포\nfrom scipy.stats import uniform uniform.pdf(x, loc=0, scale=1) uniform.cdf(x, loc=0, scale=1) uniform.ppf(q, loc=0, scale=1) uniform.rvs(loc=0, scale=1, size=None, random_state=None)"
  },
  {
    "objectID": "posts/stat1/index.html#정규분포",
    "href": "posts/stat1/index.html#정규분포",
    "title": "통계계",
    "section": "2. 정규분포",
    "text": "2. 정규분포\nfrom scipy.stats import norm norm.pdf(x, loc=0, scale=1) norm.cdf(x, loc=0, scale=1) norm.ppf(q, loc=0, scale=1) norm.rvs(loc=0, scale=1, size=None, random_state=None)"
  },
  {
    "objectID": "posts/hw5/index.html",
    "href": "posts/hw5/index.html",
    "title": "LS 빅데이터 스쿨 Homework 5",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n    \n#!pip install pyreadstat\nraw_welfare= pd.read_spss('./koweps/Koweps_hpwc14_2019_beta2.sav')\n\nwelfare = raw_welfare.copy()\n\nwelfare.shape\nwelfare.info()\nwelfare.describe()\n\nwelfare = welfare.rename(\n    columns = {\n        \"h14_g3\": \"sex\",\n        \"h14_g4\": \"birth\",\n        \"h14_g10\": \"marriage_type\",\n        \"h14_g11\": \"religion\",\n        \"p1402_8aq1\": \"income\",\n        \"h14_eco9\": \"code_job\",\n        \"h14_reg7\": \"code_region\",\n    }\n)\n\nwelfare = welfare[[\"sex\",\"birth\",\"marriage_type\",\"religion\",\"income\",\"code_job\",\"code_region\"]]\nwelfare.shape\n\nwelfare['sex'].dtypes\nwelfare['sex'].value_counts()\nwelfare['sex'].isna().sum()\n\nwelfare['sex'] = np.where(welfare['sex']==1,'male','female')\nwelfare['sex']\n\nwelfare['income'].describe()\nwelfare['income'].isna().sum()\nwelfare['income'].value_counts().sort_values()\nsum(welfare['income'] &gt;9998)\n\nsex_income = welfare.dropna(subset='income').groupby('sex', as_index=False).agg(mean_income=(\"income\",\"mean\"))\nsex_income\n?sns.barplot\n\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\",errorbar=('ci', 95))\nplt.show()\nplt.clf()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 14418 entries, 0 to 14417\nColumns: 830 entries, h14_id to h14_pers_income5\ndtypes: float64(826), object(4)\nmemory usage: 91.3+ MB\n\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\n위 그래프에서 각 성별 95% 신뢰구간 계산 후 그리기(위 아래 검성색 막대기로 표시)\n\n# 표본 평균 구하기(income이 nan이 아닌 여자, 남자)\nx_var_F, x_var_M = sex_income['mean_income']\n# 표본 갯수 구하기(income이 nan이 아닌 여자, 남자)\nn_F, n_M = welfare.dropna(subset='income').value_counts('sex')\n# 표본 표준편차 구하기\nincome_female = welfare.dropna(subset='income').query('sex==\"female\"')['income']\nincome_male = welfare.dropna(subset='income').query('sex==\"male\"')['income']\ns_F = np.std(income_female, ddof=1)\ns_M = np.std(income_male, ddof=1)\n# 표본 표준오차 구하기\nse_F = np.std(income_female, ddof=1) / np.sqrt(n_F)\nse_M = np.std(income_male, ddof=1) / np.sqrt(n_M)\n# 신뢰구간 95%\n\n## 방법1) 직접 계산산\n# from scipy.stats import norm\n# z0025 = norm.ppf(0.975, loc=0, scale=1)\n# ci_left_F = x_var_F - z0025 * se_F\n# ci_right_F = x_var_F + z0025 * se_F\n# ci_left_M = x_var_M - z0025 * se_M\n# ci_right_M = x_var_M + z0025 * se_M\n\n## 방법2) scipy 함수쓰기\nfrom scipy.stats import t\nci_left_F,ci_right_F = t.interval(0.95, loc=x_var_F, scale=se_F, df=n_F-1)\nci_left_M,ci_right_M = t.interval(0.95, loc=x_var_M, scale=se_M, df=n_M-1)\nsex_income['ci_left'] = np.array([ci_left_F,ci_left_M])\nsex_income['ci_right'] = np.array([ci_right_F,ci_right_M])\n\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\", hue=\"sex\")\nplt.show()\nplt.clf()\n\nsex_income\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsex\nmean_income\nci_left\nci_right\n\n\n\n\n0\nfemale\n186.293096\n180.880349\n191.705843\n\n\n1\nmale\n349.037571\n340.020692\n358.054450\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  }
]